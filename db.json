{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/hipaper/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/comment.css","path":"css/comment.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fashion.css","path":"css/fashion.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/glyphs.css","path":"css/glyphs.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/js/jquery-3.1.1.min.js","path":"js/jquery-3.1.1.min.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/browser-support.png","path":"preview/browser-support.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/code-theme-default.png","path":"preview/code-theme-default.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/code-theme.jpg","path":"preview/code-theme.jpg","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/hipaper-preview.png","path":"preview/hipaper-preview.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/logo-preview.jpg","path":"preview/logo-preview.jpg","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/mobile-preview.png","path":"preview/mobile-preview.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/preview/search-preview.png","path":"preview/search-preview.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fonts/athemes-glyphs.woff","path":"css/fonts/athemes-glyphs.woff","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/images/pose01.jpg","path":"css/images/pose01.jpg","modified":1,"renderable":1},{"_id":"themes/hipaper/source/css/images/rocket.png","path":"css/images/rocket.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/ABOUT/index.md","hash":"2c97fc3b5a248e556a47b77f21010c809a6ca709","modified":1730198179495},{"_id":"source/_posts/UI学习记录.md","hash":"eca050bf3ce190c17098d9fc5578517e7ddc910f","modified":1730198179495},{"_id":"source/_posts/git搭建（二）.md","hash":"cf4217318f78911ebf7c0caf51cb5da572c1eca8","modified":1730198179504},{"_id":"source/_posts/hexo博客.md","hash":"419389a4b7c18cfc7e8a662fac962ba7265dca92","modified":1730198179504},{"_id":"source/_posts/力扣刷题笔记.md","hash":"dce1155b34f195dd664b0639698612798ed9a2fd","modified":1730198179504},{"_id":"source/_posts/虚拟机搭建.md","hash":"6ae9b806ea3681de737ee43944c8493cad21057f","modified":1730198179504},{"_id":"source/_posts/远程仓库链接.md","hash":"43994f318aeed1f578a74cf8a59fbbb0abfd1666","modified":1730198179505},{"_id":"source/categories/index.md","hash":"ba792d5f2490d05220a9dc73af2b565ccc139b9c","modified":1730198179505},{"_id":"source/tags/index.md","hash":"c8dce1c9fd27ceb920b5575bf2cdfd61a0c6c2b2","modified":1730198179505},{"_id":"source/_posts/UI学习记录/3.jpg","hash":"f166bbf662e0326b21038de8b4b507215c6f5847","modified":1730198179500},{"_id":"source/_posts/UI学习记录/图标11.png","hash":"ed2a7968b4481012a91b8ec0428c79c19826c455","modified":1730198179504},{"_id":"themes/hipaper/source/css/_partial/footer.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1730198179514},{"_id":"themes/hipaper/source/css/_partial/header-post.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1730198179515},{"_id":"themes/hipaper/source/css/_partial/header.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1730198179515},{"_id":"source/_posts/UI学习记录/4.png","hash":"7ddd1d1dc93fc371717c44a360b1fb05b48a1610","modified":1730198179502},{"_id":"themes/hipaper/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1730198179505},{"_id":"themes/hipaper/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1730198179505},{"_id":"themes/hipaper/.travis.yml","hash":"7ed5eb33c899eb49ec323f7ed7ee431bea52bf4f","modified":1730198179505},{"_id":"themes/hipaper/LICENSE","hash":"53bb975b001b0d0bb2ddd7c302a9c8a20195f0be","modified":1730198179506},{"_id":"themes/hipaper/README.cn.md","hash":"56e2ed603f518fd2ac9dc5e1e128778e51e30e4c","modified":1730198179506},{"_id":"themes/hipaper/README.md","hash":"b74615451dcf680f9058dc818d3bb9577e4e3875","modified":1730198179506},{"_id":"themes/hipaper/_config.yml","hash":"ab606b4088a362aa61819a8dad01dfa39b36777f","modified":1730198179506},{"_id":"themes/hipaper/package.json","hash":"f28bbd9f21b5c166adf59b6f989f63e9afdb1ba7","modified":1730198179514},{"_id":"themes/hipaper/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1730198179506},{"_id":"themes/hipaper/languages/default.yml","hash":"78ba14d792550cf1e250692b68fedd8fb7c25f4f","modified":1730198179506},{"_id":"themes/hipaper/languages/en.yml","hash":"78ba14d792550cf1e250692b68fedd8fb7c25f4f","modified":1730198179506},{"_id":"themes/hipaper/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1730198179507},{"_id":"themes/hipaper/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1730198179507},{"_id":"themes/hipaper/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1730198179507},{"_id":"themes/hipaper/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1730198179507},{"_id":"themes/hipaper/languages/pt.yml","hash":"0ec64b7e134e802846125770782fab9590495bcd","modified":1730198179507},{"_id":"themes/hipaper/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1730198179507},{"_id":"themes/hipaper/languages/zh-CN.yml","hash":"d529622a486c66506465b6b1b23d7c35a1f85904","modified":1730198179507},{"_id":"themes/hipaper/languages/zh-TW.yml","hash":"65d18e892a6f11f2784001d5a5d1acf958b71711","modified":1730198179507},{"_id":"themes/hipaper/layout/archive.ejs","hash":"f21c508bca9d810e33a10a735d9bfdae21ef687d","modified":1730198179512},{"_id":"themes/hipaper/layout/categories.ejs","hash":"da4c1eb60ad99bc724913e21cde239ce8869c25e","modified":1730198179512},{"_id":"themes/hipaper/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1730198179513},{"_id":"themes/hipaper/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1730198179513},{"_id":"themes/hipaper/layout/layout.ejs","hash":"5ca6c559319c570587dcbc689ac349deea6cd06a","modified":1730198179513},{"_id":"themes/hipaper/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1730198179513},{"_id":"themes/hipaper/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1730198179513},{"_id":"themes/hipaper/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1730198179513},{"_id":"themes/hipaper/layout/tags.ejs","hash":"2ecf18cf840207c5688af0be0ded77e770661037","modified":1730198179514},{"_id":"themes/hipaper/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1730198179514},{"_id":"themes/hipaper/layout/_partial/after-footer.ejs","hash":"3d8578e4bd4287b3424c40fde2fc5414b06b6a53","modified":1730198179507},{"_id":"themes/hipaper/layout/_partial/archive-post.ejs","hash":"f380e5459a043979e0c7429dcf33f20302631214","modified":1730198179507},{"_id":"themes/hipaper/layout/_partial/archive.ejs","hash":"62ff097c313c1b87724c9916ec3fd44545b56d35","modified":1730198179508},{"_id":"themes/hipaper/layout/_partial/article.ejs","hash":"9eacb67d0674d481c179730940c0c0f137b2e74a","modified":1730198179508},{"_id":"themes/hipaper/layout/_partial/baidu-analytics.ejs","hash":"1edc20ced3c255c09405f0750b6c7bdf328af554","modified":1730198179508},{"_id":"themes/hipaper/layout/_partial/busuanzi-analytics.ejs","hash":"7a3a810e343c59fd16896de3165f41253d4121e1","modified":1730198179508},{"_id":"themes/hipaper/layout/_partial/cnzz-analytics.ejs","hash":"b340ae5f2b7550ff1eb771904bc374e09b6880b0","modified":1730198179508},{"_id":"themes/hipaper/layout/_partial/comment.ejs","hash":"5e574aac7100e61f082cfd4c13a4719317fb6b50","modified":1730198179508},{"_id":"themes/hipaper/layout/_partial/facebook-sdk.ejs","hash":"8fc5cf7abbfd587057fb86ee028c7f216d30d68c","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/footer.ejs","hash":"b26ba714b17997ac58df3363639fa3c4b52a5881","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/head.ejs","hash":"bda3532beb8bade32f516304536d32c0ea2095cf","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/header-post.ejs","hash":"3d7c32aa562ce0d55aa68d1e533bd532a6359162","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1730198179511},{"_id":"themes/hipaper/layout/_partial/tencent-analytics.ejs","hash":"6a50e6fe7701ff131b2fc0c066a4615dd2a37da7","modified":1730198179511},{"_id":"themes/hipaper/layout/_widget/archive.ejs","hash":"856a6352a0f8d55f3d2965eea8ad4ec517f6af96","modified":1730198179511},{"_id":"themes/hipaper/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1730198179511},{"_id":"themes/hipaper/layout/_widget/recent_posts.ejs","hash":"b8d29ab002e7fa855f4322dccc6546841eaecd80","modified":1730198179511},{"_id":"themes/hipaper/layout/_widget/social.ejs","hash":"0a321259dcc2a55f8e6c257aaaecea9edd9e4932","modified":1730198179512},{"_id":"themes/hipaper/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1730198179512},{"_id":"themes/hipaper/layout/_widget/search.ejs","hash":"1241e08e33208a3b7175b9aa3ff740934b110143","modified":1730198179511},{"_id":"themes/hipaper/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1730198179512},{"_id":"themes/hipaper/layout/search/baidu.ejs","hash":"8cc6f6e601b14d310f20eaf29dc55d6c60ab4ee4","modified":1730198179513},{"_id":"themes/hipaper/layout/search/index-mobile.ejs","hash":"8e2e28b37a908f60e4953bf9175a7af329d15d40","modified":1730198179513},{"_id":"themes/hipaper/layout/search/index.ejs","hash":"45b8ef82fb642364818b4d0fcbdf852eb629a061","modified":1730198179513},{"_id":"themes/hipaper/layout/search/insight.ejs","hash":"11a07a4ea37b64e36a85f1f8889cce00c5979e1f","modified":1730198179513},{"_id":"themes/hipaper/layout/search/swiftype.ejs","hash":"cce9c44180d9490f45b30b8f052ac82675a9d66a","modified":1730198179513},{"_id":"themes/hipaper/source/css/_extend.styl","hash":"e3bb9a6ec8b2c2341e97e92e5d92b106651d7144","modified":1730198179514},{"_id":"themes/hipaper/source/css/_variables.styl","hash":"fa8e5ddacf8a3a0b4b5618d363fb4e030ea705a7","modified":1730198179516},{"_id":"themes/hipaper/source/css/comment.css","hash":"33aa139c629fae0c5647c985973d59de7a9fad49","modified":1730198179517},{"_id":"themes/hipaper/source/css/fashion.css","hash":"b9528068c4559c4e2f77ab1d62d522e1dd1371e5","modified":1730198179517},{"_id":"themes/hipaper/source/css/glyphs.css","hash":"788c8d61a24dcdbaa9d8026a18fb19fbb27dcd4d","modified":1730198179521},{"_id":"themes/hipaper/source/css/style.styl","hash":"073fe3e674b3d3900cc313466963bccc4d23e354","modified":1730198179524},{"_id":"themes/hipaper/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1730198179524},{"_id":"themes/hipaper/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1730198179524},{"_id":"themes/hipaper/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1730198179524},{"_id":"themes/hipaper/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1730198179524},{"_id":"themes/hipaper/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1730198179525},{"_id":"themes/hipaper/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1730198179526},{"_id":"themes/hipaper/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1730198179524},{"_id":"themes/hipaper/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1730198179526},{"_id":"themes/hipaper/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1730198179526},{"_id":"themes/hipaper/source/js/insight.js","hash":"a69c9f5aecea2eae8f740b5857ee28694609373d","modified":1730198179527},{"_id":"themes/hipaper/source/js/main.js","hash":"836d1a43819a2347ddeab6185a753e35815d8ba4","modified":1730198179528},{"_id":"themes/hipaper/source/js/script.js","hash":"19ead858aa1ddfd80eb37bd9ca3b2f1f5c149b36","modified":1730198179528},{"_id":"themes/hipaper/source/js/totop.js","hash":"e9f388666901f97a601d2f3e44eb246413e5db9e","modified":1730198179528},{"_id":"themes/hipaper/source/preview/browser-support.png","hash":"a6d8498553550c6b18a8f22bcd2f53c993c7d677","modified":1730198179529},{"_id":"themes/hipaper/layout/_partial/post/busuanzi-analytics.ejs","hash":"d49ddbafab9fa6ebbb5108870901fcba0c8bcc6c","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/post/category.ejs","hash":"f60d3c9a0943b8af97b1a8a82be0addf46cda1d9","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/post/date.ejs","hash":"7b050bb6990737bfe19bfeeb65246c05cb2f8318","modified":1730198179509},{"_id":"themes/hipaper/layout/_partial/post/gallery.ejs","hash":"bfde040b4c4a8ce43645e0783cdd2b944269ec80","modified":1730198179511},{"_id":"themes/hipaper/layout/_partial/post/mathjax.ejs","hash":"ae998e014666cb354ded5a11a8a6bc7eae3e3c34","modified":1730198179511},{"_id":"themes/hipaper/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1730198179511},{"_id":"themes/hipaper/layout/_partial/post/tag.ejs","hash":"22a3580e569cb6a616d6817e32075759c6554801","modified":1730198179511},{"_id":"themes/hipaper/layout/_partial/post/title.ejs","hash":"9ee31f67ad337d5dcaaa10aa8ba55c7c22074b1c","modified":1730198179511},{"_id":"themes/hipaper/layout/_partial/post/urlconvert.ejs","hash":"2133f1029632417f9043b9d4749d580ed0c75db0","modified":1730198179511},{"_id":"themes/hipaper/source/css/_partial/archive.styl","hash":"54fe4df7a3b0c73e4c37e1d98d8191857bf0138d","modified":1730198179514},{"_id":"themes/hipaper/source/css/_partial/article.styl","hash":"7143c5dd12418cca8ce56cbef3bb03720487fb0b","modified":1730198179514},{"_id":"themes/hipaper/source/css/_partial/comment.styl","hash":"43279aaaa00cc07b4a65b13ef01c391355e82717","modified":1730198179514},{"_id":"themes/hipaper/source/css/_partial/highlight.styl","hash":"a12d13407903d4847c4207e2cd62190367acae64","modified":1730198179515},{"_id":"themes/hipaper/source/css/_partial/insight.styl","hash":"0bc5eee2822e5abffbfed7b01f6eb0d0d11b24af","modified":1730198179515},{"_id":"themes/hipaper/source/css/_partial/mobile.styl","hash":"3920e4c3cd11f294d3e7835ed628f169cbea6b21","modified":1730198179515},{"_id":"themes/hipaper/source/css/_partial/sidebar-aside.styl","hash":"60b8a4b64790a6bd51da99e6477a2bbfd24cd61c","modified":1730198179515},{"_id":"themes/hipaper/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1730198179515},{"_id":"themes/hipaper/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1730198179516},{"_id":"themes/hipaper/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1730198179516},{"_id":"themes/hipaper/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1730198179516},{"_id":"themes/hipaper/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1730198179518},{"_id":"themes/hipaper/source/css/fonts/athemes-glyphs.woff","hash":"f1ac9ffcc97571ceff48b68792c34de97bc289c0","modified":1730198179518},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1730198179519},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1730198179521},{"_id":"themes/hipaper/source/css/images/favicon.ico","hash":"55db8e7a607d37486f73e967e9389cd6578009cf","modified":1730198179521},{"_id":"themes/hipaper/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1730198179523},{"_id":"themes/hipaper/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1730198179525},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1730198179525},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1730198179525},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1730198179525},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1730198179525},{"_id":"themes/hipaper/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1730198179525},{"_id":"source/_posts/UI学习记录/1.jpg","hash":"1690430b658684cc64dd7819c1d732ce2346ecbb","modified":1730198179497},{"_id":"source/_posts/UI学习记录/5.png","hash":"d74164adeb082d535787ae53980a045779f237a2","modified":1730198179504},{"_id":"themes/hipaper/source/js/bootstrap.js","hash":"474b25cebd06d57a38090c6716d5dfaa5591baad","modified":1730198179527},{"_id":"themes/hipaper/source/js/jquery-3.1.1.min.js","hash":"042dd055cd289215835a58507c9531f808e1648a","modified":1730198179528},{"_id":"themes/hipaper/source/preview/code-theme-default.png","hash":"504991f74e6508f0516b655f0310e403e4248347","modified":1730198179529},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1730198179520},{"_id":"themes/hipaper/source/css/bootstrap.css","hash":"52ce1589569e6c2026296f57d09bb9b4f5c5285e","modified":1730198179517},{"_id":"themes/hipaper/source/preview/logo-preview.jpg","hash":"7dde15dc09c11162c3f28fe8516c879ddd7d8e60","modified":1730198179538},{"_id":"themes/hipaper/source/preview/search-preview.png","hash":"833e34fdebadb15609fc758ff5786b2c713e0ecc","modified":1730198179541},{"_id":"themes/hipaper/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1730198179519},{"_id":"source/_posts/UI学习记录/2.png","hash":"c236c71ac2b5ada3cba5cc46735d1da3ed79f343","modified":1730198179499},{"_id":"themes/hipaper/source/preview/mobile-preview.png","hash":"cf7b24d88aa28b71dbcafda2371d70ef97052e21","modified":1730198179539},{"_id":"themes/hipaper/source/css/images/pose01.jpg","hash":"8c2a604c149850ee3fa0abb25b43b77093bd1772","modified":1730198179523},{"_id":"themes/hipaper/source/preview/hipaper-preview.png","hash":"12d42037cb2758ec395342ca55009e092c3d013f","modified":1730198179536},{"_id":"themes/hipaper/source/preview/code-theme.jpg","hash":"8c8512fd04e6106033656d10e92d51de76cca6d8","modified":1730198179534},{"_id":"public/categories/index.html","hash":"d4026bb365214b41a5509dd798a26ed2403f790b","modified":1730199116261},{"_id":"public/tags/index.html","hash":"0ed291c140c827479836300b52ba2ba123a68362","modified":1730199116261},{"_id":"public/ABOUT/index.html","hash":"893e4cae44293300ae1d774cf2e2c5635c236cf5","modified":1730199116261},{"_id":"public/2024/10/29/hexo博客/index.html","hash":"1763313e895ac8ab8b8c633033034a72c9499696","modified":1730199116261},{"_id":"public/2024/10/10/力扣刷题笔记/index.html","hash":"bd46117a0225307d1b6b1d6f5ea0e04a3ec5dc7c","modified":1730199116261},{"_id":"public/2024/10/29/git搭建（二）/index.html","hash":"47da2aca226c4bd15a72e27e03c9aebd5238545d","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/index.html","hash":"525408b20317c2e0338eccde99072c0151de07be","modified":1730199116261},{"_id":"public/2022/09/12/虚拟机搭建/index.html","hash":"9f0405611e2b7e9ec8c60360f658ee78629d0ff8","modified":1730199116261},{"_id":"public/2022/09/09/远程仓库链接/index.html","hash":"b4281bb2d1c020e4ad84230126b0e521b6e179d3","modified":1730199116261},{"_id":"public/archives/index.html","hash":"7c48315b6a45d133c02d74edb312785f6660bb08","modified":1730199116261},{"_id":"public/archives/2022/index.html","hash":"55f42c911a1c17df4c2248573d5c911ca7aabce6","modified":1730199116261},{"_id":"public/archives/2022/09/index.html","hash":"20a32f3b2294aa70fa8c4633b65f4eaad8b03f88","modified":1730199116261},{"_id":"public/archives/2024/index.html","hash":"d832a89f76001c70d177678bbdd1ecc7c1e64378","modified":1730199116261},{"_id":"public/index.html","hash":"b63567d8199b2326408b46b69cd03ffa3bac03cd","modified":1730199116261},{"_id":"public/archives/2024/10/index.html","hash":"06d9e2592ae0c77bc802523467da727a2c7d51d7","modified":1730199116261},{"_id":"public/categories/编程学习/index.html","hash":"ab4a5c9ed9ae69159afc9e7f774d90bc961ac2d2","modified":1730199116261},{"_id":"public/tags/leetcode/index.html","hash":"038eabc85f29e1e96edb7aaa68576fe23b9b0fd2","modified":1730199116261},{"_id":"public/tags/UI设计/index.html","hash":"c1884532ad566ebd835b5b8d684feebf6ab85270","modified":1730199116261},{"_id":"public/tags/Git/index.html","hash":"0a40e037bd35ad2349454b5beba7d9a5064dd871","modified":1730199116261},{"_id":"public/tags/虚拟机/index.html","hash":"61ed1434ece7480b0414272ce89caee6691712d7","modified":1730199116261},{"_id":"public/archives/2022/10/index.html","hash":"e681e6ca870e128c044e3368e4562113e114dee0","modified":1730199116261},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1730199116261},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1730199116261},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1730199116261},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1730199116261},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1730199116261},{"_id":"public/preview/browser-support.png","hash":"a6d8498553550c6b18a8f22bcd2f53c993c7d677","modified":1730199116261},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1730199116261},{"_id":"public/css/comment.css","hash":"0f0d50e4153ce92b22ee18b214dfc76d8c386376","modified":1730199116261},{"_id":"public/css/style.css","hash":"9388779982646667dd22744690134cabfaa15887","modified":1730199116261},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1730199116261},{"_id":"public/css/glyphs.css","hash":"c4088f9a347e42a31d9aabc8aa17ead3d1ed8b8e","modified":1730199116261},{"_id":"public/css/fashion.css","hash":"3870e1ee8c850e92d9c3aa71d03afa7b0eef2a5c","modified":1730199116261},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1730199116261},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1730199116261},{"_id":"public/css/bootstrap.css","hash":"afa4ed6bce62b265d08b0a5011558fe63e0bd289","modified":1730199116261},{"_id":"public/js/insight.js","hash":"2995f3f94d0a9887b08e38a6f5053b6ca2997c19","modified":1730199116261},{"_id":"public/js/main.js","hash":"40a2a59fa31c564b4228d444616d3a2ba97d36fb","modified":1730199116261},{"_id":"public/js/script.js","hash":"4964e125255a3f1afbf05728b331ad1fb1646e4d","modified":1730199116261},{"_id":"public/js/totop.js","hash":"560baaa7bbf70ce67261b39aef61293646d9e539","modified":1730199116261},{"_id":"public/js/jquery-3.1.1.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1730199116261},{"_id":"public/js/bootstrap.js","hash":"3b965a36a6b08854ad6eddedf85c5319fd392b4a","modified":1730199116261},{"_id":"public/css/fonts/athemes-glyphs.woff","hash":"f1ac9ffcc97571ceff48b68792c34de97bc289c0","modified":1730199116261},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1730199116261},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1730199116261},{"_id":"public/css/images/favicon.ico","hash":"55db8e7a607d37486f73e967e9389cd6578009cf","modified":1730199116261},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1730199116261},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1730199116261},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/3.jpg","hash":"f166bbf662e0326b21038de8b4b507215c6f5847","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/图标11.png","hash":"ed2a7968b4481012a91b8ec0428c79c19826c455","modified":1730199116261},{"_id":"public/preview/code-theme-default.png","hash":"504991f74e6508f0516b655f0310e403e4248347","modified":1730199116261},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1730199116261},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1730199116261},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1730199116261},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1730199116261},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1730199116261},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1730199116261},{"_id":"public/preview/logo-preview.jpg","hash":"7dde15dc09c11162c3f28fe8516c879ddd7d8e60","modified":1730199116261},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1730199116261},{"_id":"public/preview/search-preview.png","hash":"833e34fdebadb15609fc758ff5786b2c713e0ecc","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/4.png","hash":"7ddd1d1dc93fc371717c44a360b1fb05b48a1610","modified":1730199116261},{"_id":"public/preview/mobile-preview.png","hash":"cf7b24d88aa28b71dbcafda2371d70ef97052e21","modified":1730199116261},{"_id":"public/css/images/pose01.jpg","hash":"8c2a604c149850ee3fa0abb25b43b77093bd1772","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/5.png","hash":"d74164adeb082d535787ae53980a045779f237a2","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/1.jpg","hash":"1690430b658684cc64dd7819c1d732ce2346ecbb","modified":1730199116261},{"_id":"public/preview/hipaper-preview.png","hash":"12d42037cb2758ec395342ca55009e092c3d013f","modified":1730199116261},{"_id":"public/2022/10/14/UI学习记录/2.png","hash":"c236c71ac2b5ada3cba5cc46735d1da3ed79f343","modified":1730199116261},{"_id":"public/preview/code-theme.jpg","hash":"8c8512fd04e6106033656d10e92d51de76cca6d8","modified":1730199116261}],"Category":[{"name":"编程学习","_id":"cm2ubvqnv0004f8v8adr65gfi"}],"Data":[],"Page":[{"title":"ABOUT","date":"2024-10-25T13:52:16.000Z","_content":"","source":"ABOUT/index.md","raw":"---\ntitle: ABOUT\ndate: 2024-10-25 21:52:16\n---\n","updated":"2024-10-29T10:36:19.495Z","path":"ABOUT/index.html","comments":1,"layout":"page","_id":"cm2ubvqnp0000f8v8filx4w61","content":"","excerpt":"","more":""},{"title":"categories","date":"2024-10-28T07:10:48.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-10-28 15:10:48\n---\n","updated":"2024-10-29T10:36:19.505Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm2ubvqnt0002f8v8b6ud93vc","content":"","excerpt":"","more":""},{"title":"tags","date":"2024-10-28T07:12:04.000Z","_content":"\n## 标签列表\n\n- **UI设计**\n  - 介绍：关于用户界面设计的文章和资源。\n  \n- **Git**\n  - 介绍：关于 Git 版本控制系统的文章，包括常用命令和技巧。\n\n- **LeetCode**\n  - 介绍：与 LeetCode 编程题相关的解决方案和分析。\n\n- **虚拟机**\n  - 介绍：关于虚拟机技术的文章，包括使用和配置的指南。\n\n## 标签下的文章\n\n### UI设计\n- [UI学习记录](/2022/10/14/UI学习记录/)\n### Git\n- [Git使用教程](/2022/09/12/远程仓库链接/)\n### 虚拟机\n- [虚拟机安装指南](http://localhost:4000/2022/09/12/虚拟机搭建/)\n### LeetCode\n- [LeetCode刷题笔记](link-to-article)\n\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-10-28 15:12:04\n---\n\n## 标签列表\n\n- **UI设计**\n  - 介绍：关于用户界面设计的文章和资源。\n  \n- **Git**\n  - 介绍：关于 Git 版本控制系统的文章，包括常用命令和技巧。\n\n- **LeetCode**\n  - 介绍：与 LeetCode 编程题相关的解决方案和分析。\n\n- **虚拟机**\n  - 介绍：关于虚拟机技术的文章，包括使用和配置的指南。\n\n## 标签下的文章\n\n### UI设计\n- [UI学习记录](/2022/10/14/UI学习记录/)\n### Git\n- [Git使用教程](/2022/09/12/远程仓库链接/)\n### 虚拟机\n- [虚拟机安装指南](http://localhost:4000/2022/09/12/虚拟机搭建/)\n### LeetCode\n- [LeetCode刷题笔记](link-to-article)\n\n\n","updated":"2024-10-29T10:36:19.505Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm2ubvqnx0006f8v88n07713n","content":"<h2 id=\"标签列表\"><a href=\"#标签列表\" class=\"headerlink\" title=\"标签列表\"></a>标签列表</h2><ul>\n<li><p><strong>UI设计</strong></p>\n<ul>\n<li>介绍：关于用户界面设计的文章和资源。</li>\n</ul>\n</li>\n<li><p><strong>Git</strong></p>\n<ul>\n<li>介绍：关于 Git 版本控制系统的文章，包括常用命令和技巧。</li>\n</ul>\n</li>\n<li><p><strong>LeetCode</strong></p>\n<ul>\n<li>介绍：与 LeetCode 编程题相关的解决方案和分析。</li>\n</ul>\n</li>\n<li><p><strong>虚拟机</strong></p>\n<ul>\n<li>介绍：关于虚拟机技术的文章，包括使用和配置的指南。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"标签下的文章\"><a href=\"#标签下的文章\" class=\"headerlink\" title=\"标签下的文章\"></a>标签下的文章</h2><h3 id=\"UI设计\"><a href=\"#UI设计\" class=\"headerlink\" title=\"UI设计\"></a>UI设计</h3><ul>\n<li><a href=\"/2022/10/14/UI%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/\">UI学习记录</a></li>\n</ul>\n<h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><ul>\n<li><a href=\"/2022/09/12/%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%93%BE%E6%8E%A5/\">Git使用教程</a></li>\n</ul>\n<h3 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a>虚拟机</h3><ul>\n<li><a href=\"http://localhost:4000/2022/09/12/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA/\">虚拟机安装指南</a></li>\n</ul>\n<h3 id=\"LeetCode\"><a href=\"#LeetCode\" class=\"headerlink\" title=\"LeetCode\"></a>LeetCode</h3><ul>\n<li><a href=\"link-to-article\">LeetCode刷题笔记</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"标签列表\"><a href=\"#标签列表\" class=\"headerlink\" title=\"标签列表\"></a>标签列表</h2><ul>\n<li><p><strong>UI设计</strong></p>\n<ul>\n<li>介绍：关于用户界面设计的文章和资源。</li>\n</ul>\n</li>\n<li><p><strong>Git</strong></p>\n<ul>\n<li>介绍：关于 Git 版本控制系统的文章，包括常用命令和技巧。</li>\n</ul>\n</li>\n<li><p><strong>LeetCode</strong></p>\n<ul>\n<li>介绍：与 LeetCode 编程题相关的解决方案和分析。</li>\n</ul>\n</li>\n<li><p><strong>虚拟机</strong></p>\n<ul>\n<li>介绍：关于虚拟机技术的文章，包括使用和配置的指南。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"标签下的文章\"><a href=\"#标签下的文章\" class=\"headerlink\" title=\"标签下的文章\"></a>标签下的文章</h2><h3 id=\"UI设计\"><a href=\"#UI设计\" class=\"headerlink\" title=\"UI设计\"></a>UI设计</h3><ul>\n<li><a href=\"/2022/10/14/UI%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/\">UI学习记录</a></li>\n</ul>\n<h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><ul>\n<li><a href=\"/2022/09/12/%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E9%93%BE%E6%8E%A5/\">Git使用教程</a></li>\n</ul>\n<h3 id=\"虚拟机\"><a href=\"#虚拟机\" class=\"headerlink\" title=\"虚拟机\"></a>虚拟机</h3><ul>\n<li><a href=\"http://localhost:4000/2022/09/12/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA/\">虚拟机安装指南</a></li>\n</ul>\n<h3 id=\"LeetCode\"><a href=\"#LeetCode\" class=\"headerlink\" title=\"LeetCode\"></a>LeetCode</h3><ul>\n<li><a href=\"link-to-article\">LeetCode刷题笔记</a></li>\n</ul>\n"}],"Post":[{"title":"UI学习记录","date":"2022-10-14T15:08:26.000Z","_content":"设计一款焦糖风格的宠物分享平台app~猫猫云！\n\n<!-- more -->\n## 任务信息\n### 任务一\n设计该app的图标，具有焦糖特色，创新简洁，工具不限\n### 任务二\n为这个app取一个好听的名字，并写一份需求分析文档，说明app的基本功能，业务逻辑等\n该app需包含用户发帖分享宠物日常的基本功能，另需增加至少一项其他与宠物相关的功能模块\n### 任务三\n绘制该app的原型图，机型不限，需具有焦糖特色\n\n## 做题基本流程：\n\n* 1、读题：先读题目，获取信息，明确要求；\n* 2、破题：根据信息，大范围搜集资料，知道题目到底在说些什么，\n* 3、入题：落实要求，开始试错；只有真正开始上手做了，才会知道缺少什么。\n* 4、做题1：根据试错版本，知道自己的知识与经验瓶颈。再深入搜集信息，学习知识。\n* 5、做题2：根据新信息，改善试错版本/开始新版本。\n* 6、做题3：不断重复步骤四五，丰富信息，打磨版本。\n* 7、结题：汇总整理前期的做题记录，作结论，写报告。\n## 任务一：APP图标\n所以，在第四题题目中获取基本信息之后，我下载了Photoshop，搜集市面上所有宠物相关的软件图标，浅找了网课学习，浅回顾了高中美术课的图标设计有关内容（感谢老师，认真讲了，感谢自己，认真学了，认真画了）\n开始试错任务一：软件图标。\n### 版本一\n\n题目限制条件：1、宠物软件；2、焦糖风格；3、创新简洁。\n\n个人条件：我，一个只会简单ps操作的入门选手，\n没有数位板，没有pad，纯手绘一个创新、简洁且美观的图标，不太现实。\n\n解题思路：\n感谢相关参考资料的建议，以及前两年系统化自学PPT积累的图片与图标资源，\n我迅速的决定“改图”。从网络中找到合适的图片资源，再在图片的基础上，\n通过ps，进行融图和修改。（融图：把焦糖图标和找到的图片融合到一起）\n\n在花瓣网上，我找到了特别合适的融图资源。\n[![版本一底图.jpg](https://s21.ax1x.com/2024/10/09/pAJQvI1.jpg)](https://imgse.com/i/pAJQvI1)\n把中间的猫猫抠出来，再把中间的盘子换成焦糖的图标。\n在此基础上，对照着图标的规格大小，规范化图片。perfect！\n[![版本一图标.png](https://s21.ax1x.com/2024/10/09/pAJlpRK.png)](https://imgse.com/i/pAJlpRK)\n宠物——可爱的风格，代表性的猫猫\n\n焦糖风格——焦糖的图标还不够代表焦糖嘛？\n\n创新简洁——猫猫都简笔画了，当然问题不大。至于焦糖图标不够简单，我把图标颜色调简单一点，解决！\n\n看起来似乎不错，但是，当我关上电脑，打开手机，盯着那一片的图标，我陷入沉默。这个图标满足要求吗？满足。但是，它真的看起来不像一个图标啊！！！我把图标导出为png图片，放在桌面上，和一众电脑图标对比，这种感觉就更加强烈了。\n分析一下原因：\n\n1、我在简洁性上自我欺骗；\n\n2、就算它和“国家反炸中心”的警徽对比起来，足够简洁，它看起来也不像一个宠物分享平台的图标。猫猫并不是主体，内容与宠物分享风马牛不相及；\n\n3、元素杂糅，画风微妙。\n\n以上，促使我做出了版本二。\n### 版本二\n\n严格意义上，它甚至不能算是一个版本，算是我的一个没有结果的尝试。同样的融图思路，不同的启发图片。\n[![版本二.jpg](https://s21.ax1x.com/2024/10/09/pAJlmJP.jpg)](https://imgse.com/i/pAJlmJP)\n比如，将月亮换成焦糖图标，又比如，放大猫猫，将猫猫变得焦糖一点。\n从我连结果都没有导出，就可以发现，我的尝试比较失败。\n\n分析原因：\n\n1、这个猫猫剪影不够简洁，图片来源是是摄影而不是绘画设计。二次创作难以简洁化图片。\n\n2、黑白剪影好看的前提是简洁的背景（如：虚化后的月亮，纯色），如果将黑白剪影的元素强行与焦糖杂糅，还是会很奇怪。\n\n3、将黑白猫猫焦糖化在这个图片里不合理且不会好看。\n\n4、图标往往有格式限制，强制性的由圆转方，减少留白，图片也失去了它原本的意蕴。\n\n至此，陷入小的僵局。\n### 僵局\n\n\n* 顺势进入做题步骤四，我再次研究了市面上所有的软件图标（重点：宠物相关软件）。发现以下几类：\n\n1、用汉字或英文直接重复软件名字+设计感的字+和软件页面契合的配色（如：bilibili，唯品会，天府通，小红书，翼支付，咸鱼）\n这个方案十分可行，在所有软件图标中占比也大，然而作为招新题，交上去真的有点太水了。\n\n2、软件代表的吉祥物做图标（如：QQ，菜鸟京东，天猫，淘特，QQ阅读，虎牙直播，AcFun）这个设计方案对绘画要求更高。\n\n3、抽象表意符号做图标，这种抽象表意符号，往往和软件名或者软件内容有关系。（如：网易云音乐，QQ音乐，剪映，抖音，快手，芒果TV）\n\n* 同时灵活运用“git&GitHub”中学到的破局之法，回顾分析试错内容：\n\n1、融合焦糖元素时，不要过分生硬，直接把logo贴上去。\n\n2、黑白剪影是可行的，可图片还需要经过精心挑选，融合方式也要再做考虑。\n\n3、选取的图片素材尽可能风格较明显，或者风格较弱，比较方便融合焦糖元素。\n\n### 版本三\n由于我认为黑白剪影是可以再尝试的内容，所以再次寻找了可以的黑白剪影猫猫图。\n[![pAJlnRf.png](https://s21.ax1x.com/2024/10/09/pAJlnRf.png)](https://imgse.com/i/pAJlnRf)\n我在ps中设置了两个图层，图层一猫猫剪影，图层二放大的焦糖logo。通过蒙版抠图，剪影的黑白色被替换为了焦糖条纹🙂。\n[![pAJluz8.png](https://s21.ax1x.com/2024/10/09/pAJluz8.png)](https://imgse.com/i/pAJluz8)\n经过一系列细节调整后，我又又又又又又又发现了问题：这个猫猫整体偏长，做成图标尺寸后，要么尾巴在图像外。要么猫猫主体偏小。这个猫猫过细的身体配上焦糖条纹，略显奇怪。\n\n\n### 版本四\n剪影猫猫的思路是正确的，如何在放大猫猫主体的基础上，展现焦糖风格呢？猫猫主体主要体现在猫猫的头部形状上，那么抛弃偏长的身体，重新使用钢笔工具进行简单绘制，就能得到一张全新的、简洁的焦糖猫猫图标。\n思路已经有了，但如何以我不高的绘画水平进行绘制仍是问题。\n看着电脑上残存的猫猫头，我再次神游起来：这个软件应该叫什么名字呢？\n毕竟，那么多软件图标的母亲都是软件的名字。这个软件名，既要和宠物有关系，\n又要体现它的功能：宠物分享平台。可能受到猫猫之神的启发，可能因为出题的学姐称“猫”为“猫猫”，\n我突然灵光一闪：猫猫云！互联网上云吸猫，云养猫，“云”一字不正能体现这个平台的作用嘛？！\n\n软件名字定了——“猫猫云”，再细看这个猫猫头，它那长长的两根胡须，简直像极了“云”字上面的两条横线。\n把猫猫头单拎出来，打开钢笔功能，改路径为形状，以云的下半部分为模板，绘制猫猫身体。你别说，有模有样，我特别满意。我的猫猫云图标也就确定下来了：\n再根据相同方式，与焦糖logo进行融合，挑选配色及融合方案，得到最终的图标。\n[![最终图标.png](https://s21.ax1x.com/2024/10/09/pAJlNWV.png)](https://imgse.com/i/pAJlNWV)\n\n## 任务二三 需求文档及原型图\n### 我的做题顺序：\n\n1、查找相关资料，了解需求文档与原型图是什么，怎么画；\n\n2、写需求文档目录，设计“猫猫云”基本功能；\n\n3、画产品结构图，主要业务流程图；\n\n4、根据上述两图，绘制原型图；\n\n5、根据需求文档目录，完善文档内容；\n\n### 过程总结\n\n上述做题顺序看起来岁月静好，无波无浪，然而，在需求文档首次书写中，遇见了很多问题：\n\n1、软件功能设计的纠结和不自信，导致我在今天10月4日，还在思考这个功能需不需要增加。\n\n2、信息的混杂，需求文档标准的模糊，让我中途停下，怀疑各种内容，\n对文档进行反复的细枝末节的修改，耽误时间并且举足不前，不敢往下继续书写。\n\n3、对于信息来源的忽视，系统的网课其实能比较好的解决问题二，可这条解决方法被我一直忽略。\n没有总结整理出来一套有逻辑的完整的信息获取路径。\n\n4、我采用的原型软件是XD，我以七天试用期为截止时间，高效完成了原型图的绘制。\n得不到的永远在骚动？试用期过了大概四五天，我就对我的原型图再次百般不满，想改又买不起软件。\n用盗版，又担心网上的链接不安全。感谢崔导，提醒我，还有淘宝这种好东西！\n\n5、交互说明编写说明编号，画原型图过程中据逻辑顺序给原型图编号，导致交互说明中的编号显得比较混乱，没有逻辑顺序。\n\n6、非功能需求的技术含量与专业名词相对较多，ddl人在马拉松时期没有完成系统化的学习和了解；\n\n🙂10月13日的我，看着最后24h的截止时间，本打算再肝一肝需求文档。但是，markdown文档中的图片链接出现了问题。。。目前我只能靠我的pdf勉强维生/(ㄒoㄒ)/~~。就，再挣扎最后一天吧。。。\n","source":"_posts/UI学习记录.md","raw":"---\ntitle: UI学习记录\ndate: 2022-10-14 23:08:26\ntags: UI设计\ncategories: 编程学习\n---\n设计一款焦糖风格的宠物分享平台app~猫猫云！\n\n<!-- more -->\n## 任务信息\n### 任务一\n设计该app的图标，具有焦糖特色，创新简洁，工具不限\n### 任务二\n为这个app取一个好听的名字，并写一份需求分析文档，说明app的基本功能，业务逻辑等\n该app需包含用户发帖分享宠物日常的基本功能，另需增加至少一项其他与宠物相关的功能模块\n### 任务三\n绘制该app的原型图，机型不限，需具有焦糖特色\n\n## 做题基本流程：\n\n* 1、读题：先读题目，获取信息，明确要求；\n* 2、破题：根据信息，大范围搜集资料，知道题目到底在说些什么，\n* 3、入题：落实要求，开始试错；只有真正开始上手做了，才会知道缺少什么。\n* 4、做题1：根据试错版本，知道自己的知识与经验瓶颈。再深入搜集信息，学习知识。\n* 5、做题2：根据新信息，改善试错版本/开始新版本。\n* 6、做题3：不断重复步骤四五，丰富信息，打磨版本。\n* 7、结题：汇总整理前期的做题记录，作结论，写报告。\n## 任务一：APP图标\n所以，在第四题题目中获取基本信息之后，我下载了Photoshop，搜集市面上所有宠物相关的软件图标，浅找了网课学习，浅回顾了高中美术课的图标设计有关内容（感谢老师，认真讲了，感谢自己，认真学了，认真画了）\n开始试错任务一：软件图标。\n### 版本一\n\n题目限制条件：1、宠物软件；2、焦糖风格；3、创新简洁。\n\n个人条件：我，一个只会简单ps操作的入门选手，\n没有数位板，没有pad，纯手绘一个创新、简洁且美观的图标，不太现实。\n\n解题思路：\n感谢相关参考资料的建议，以及前两年系统化自学PPT积累的图片与图标资源，\n我迅速的决定“改图”。从网络中找到合适的图片资源，再在图片的基础上，\n通过ps，进行融图和修改。（融图：把焦糖图标和找到的图片融合到一起）\n\n在花瓣网上，我找到了特别合适的融图资源。\n[![版本一底图.jpg](https://s21.ax1x.com/2024/10/09/pAJQvI1.jpg)](https://imgse.com/i/pAJQvI1)\n把中间的猫猫抠出来，再把中间的盘子换成焦糖的图标。\n在此基础上，对照着图标的规格大小，规范化图片。perfect！\n[![版本一图标.png](https://s21.ax1x.com/2024/10/09/pAJlpRK.png)](https://imgse.com/i/pAJlpRK)\n宠物——可爱的风格，代表性的猫猫\n\n焦糖风格——焦糖的图标还不够代表焦糖嘛？\n\n创新简洁——猫猫都简笔画了，当然问题不大。至于焦糖图标不够简单，我把图标颜色调简单一点，解决！\n\n看起来似乎不错，但是，当我关上电脑，打开手机，盯着那一片的图标，我陷入沉默。这个图标满足要求吗？满足。但是，它真的看起来不像一个图标啊！！！我把图标导出为png图片，放在桌面上，和一众电脑图标对比，这种感觉就更加强烈了。\n分析一下原因：\n\n1、我在简洁性上自我欺骗；\n\n2、就算它和“国家反炸中心”的警徽对比起来，足够简洁，它看起来也不像一个宠物分享平台的图标。猫猫并不是主体，内容与宠物分享风马牛不相及；\n\n3、元素杂糅，画风微妙。\n\n以上，促使我做出了版本二。\n### 版本二\n\n严格意义上，它甚至不能算是一个版本，算是我的一个没有结果的尝试。同样的融图思路，不同的启发图片。\n[![版本二.jpg](https://s21.ax1x.com/2024/10/09/pAJlmJP.jpg)](https://imgse.com/i/pAJlmJP)\n比如，将月亮换成焦糖图标，又比如，放大猫猫，将猫猫变得焦糖一点。\n从我连结果都没有导出，就可以发现，我的尝试比较失败。\n\n分析原因：\n\n1、这个猫猫剪影不够简洁，图片来源是是摄影而不是绘画设计。二次创作难以简洁化图片。\n\n2、黑白剪影好看的前提是简洁的背景（如：虚化后的月亮，纯色），如果将黑白剪影的元素强行与焦糖杂糅，还是会很奇怪。\n\n3、将黑白猫猫焦糖化在这个图片里不合理且不会好看。\n\n4、图标往往有格式限制，强制性的由圆转方，减少留白，图片也失去了它原本的意蕴。\n\n至此，陷入小的僵局。\n### 僵局\n\n\n* 顺势进入做题步骤四，我再次研究了市面上所有的软件图标（重点：宠物相关软件）。发现以下几类：\n\n1、用汉字或英文直接重复软件名字+设计感的字+和软件页面契合的配色（如：bilibili，唯品会，天府通，小红书，翼支付，咸鱼）\n这个方案十分可行，在所有软件图标中占比也大，然而作为招新题，交上去真的有点太水了。\n\n2、软件代表的吉祥物做图标（如：QQ，菜鸟京东，天猫，淘特，QQ阅读，虎牙直播，AcFun）这个设计方案对绘画要求更高。\n\n3、抽象表意符号做图标，这种抽象表意符号，往往和软件名或者软件内容有关系。（如：网易云音乐，QQ音乐，剪映，抖音，快手，芒果TV）\n\n* 同时灵活运用“git&GitHub”中学到的破局之法，回顾分析试错内容：\n\n1、融合焦糖元素时，不要过分生硬，直接把logo贴上去。\n\n2、黑白剪影是可行的，可图片还需要经过精心挑选，融合方式也要再做考虑。\n\n3、选取的图片素材尽可能风格较明显，或者风格较弱，比较方便融合焦糖元素。\n\n### 版本三\n由于我认为黑白剪影是可以再尝试的内容，所以再次寻找了可以的黑白剪影猫猫图。\n[![pAJlnRf.png](https://s21.ax1x.com/2024/10/09/pAJlnRf.png)](https://imgse.com/i/pAJlnRf)\n我在ps中设置了两个图层，图层一猫猫剪影，图层二放大的焦糖logo。通过蒙版抠图，剪影的黑白色被替换为了焦糖条纹🙂。\n[![pAJluz8.png](https://s21.ax1x.com/2024/10/09/pAJluz8.png)](https://imgse.com/i/pAJluz8)\n经过一系列细节调整后，我又又又又又又又发现了问题：这个猫猫整体偏长，做成图标尺寸后，要么尾巴在图像外。要么猫猫主体偏小。这个猫猫过细的身体配上焦糖条纹，略显奇怪。\n\n\n### 版本四\n剪影猫猫的思路是正确的，如何在放大猫猫主体的基础上，展现焦糖风格呢？猫猫主体主要体现在猫猫的头部形状上，那么抛弃偏长的身体，重新使用钢笔工具进行简单绘制，就能得到一张全新的、简洁的焦糖猫猫图标。\n思路已经有了，但如何以我不高的绘画水平进行绘制仍是问题。\n看着电脑上残存的猫猫头，我再次神游起来：这个软件应该叫什么名字呢？\n毕竟，那么多软件图标的母亲都是软件的名字。这个软件名，既要和宠物有关系，\n又要体现它的功能：宠物分享平台。可能受到猫猫之神的启发，可能因为出题的学姐称“猫”为“猫猫”，\n我突然灵光一闪：猫猫云！互联网上云吸猫，云养猫，“云”一字不正能体现这个平台的作用嘛？！\n\n软件名字定了——“猫猫云”，再细看这个猫猫头，它那长长的两根胡须，简直像极了“云”字上面的两条横线。\n把猫猫头单拎出来，打开钢笔功能，改路径为形状，以云的下半部分为模板，绘制猫猫身体。你别说，有模有样，我特别满意。我的猫猫云图标也就确定下来了：\n再根据相同方式，与焦糖logo进行融合，挑选配色及融合方案，得到最终的图标。\n[![最终图标.png](https://s21.ax1x.com/2024/10/09/pAJlNWV.png)](https://imgse.com/i/pAJlNWV)\n\n## 任务二三 需求文档及原型图\n### 我的做题顺序：\n\n1、查找相关资料，了解需求文档与原型图是什么，怎么画；\n\n2、写需求文档目录，设计“猫猫云”基本功能；\n\n3、画产品结构图，主要业务流程图；\n\n4、根据上述两图，绘制原型图；\n\n5、根据需求文档目录，完善文档内容；\n\n### 过程总结\n\n上述做题顺序看起来岁月静好，无波无浪，然而，在需求文档首次书写中，遇见了很多问题：\n\n1、软件功能设计的纠结和不自信，导致我在今天10月4日，还在思考这个功能需不需要增加。\n\n2、信息的混杂，需求文档标准的模糊，让我中途停下，怀疑各种内容，\n对文档进行反复的细枝末节的修改，耽误时间并且举足不前，不敢往下继续书写。\n\n3、对于信息来源的忽视，系统的网课其实能比较好的解决问题二，可这条解决方法被我一直忽略。\n没有总结整理出来一套有逻辑的完整的信息获取路径。\n\n4、我采用的原型软件是XD，我以七天试用期为截止时间，高效完成了原型图的绘制。\n得不到的永远在骚动？试用期过了大概四五天，我就对我的原型图再次百般不满，想改又买不起软件。\n用盗版，又担心网上的链接不安全。感谢崔导，提醒我，还有淘宝这种好东西！\n\n5、交互说明编写说明编号，画原型图过程中据逻辑顺序给原型图编号，导致交互说明中的编号显得比较混乱，没有逻辑顺序。\n\n6、非功能需求的技术含量与专业名词相对较多，ddl人在马拉松时期没有完成系统化的学习和了解；\n\n🙂10月13日的我，看着最后24h的截止时间，本打算再肝一肝需求文档。但是，markdown文档中的图片链接出现了问题。。。目前我只能靠我的pdf勉强维生/(ㄒoㄒ)/~~。就，再挣扎最后一天吧。。。\n","slug":"UI学习记录","published":1,"updated":"2024-10-29T10:36:19.495Z","comments":1,"layout":"post","photos":[],"_id":"cm2ubvqnr0001f8v8by5gbdzw","content":"<p>设计一款焦糖风格的宠物分享平台app~猫猫云！</p>\n<span id=\"more\"></span>\n<h2 id=\"任务信息\"><a href=\"#任务信息\" class=\"headerlink\" title=\"任务信息\"></a>任务信息</h2><h3 id=\"任务一\"><a href=\"#任务一\" class=\"headerlink\" title=\"任务一\"></a>任务一</h3><p>设计该app的图标，具有焦糖特色，创新简洁，工具不限</p>\n<h3 id=\"任务二\"><a href=\"#任务二\" class=\"headerlink\" title=\"任务二\"></a>任务二</h3><p>为这个app取一个好听的名字，并写一份需求分析文档，说明app的基本功能，业务逻辑等<br>该app需包含用户发帖分享宠物日常的基本功能，另需增加至少一项其他与宠物相关的功能模块</p>\n<h3 id=\"任务三\"><a href=\"#任务三\" class=\"headerlink\" title=\"任务三\"></a>任务三</h3><p>绘制该app的原型图，机型不限，需具有焦糖特色</p>\n<h2 id=\"做题基本流程：\"><a href=\"#做题基本流程：\" class=\"headerlink\" title=\"做题基本流程：\"></a>做题基本流程：</h2><ul>\n<li>1、读题：先读题目，获取信息，明确要求；</li>\n<li>2、破题：根据信息，大范围搜集资料，知道题目到底在说些什么，</li>\n<li>3、入题：落实要求，开始试错；只有真正开始上手做了，才会知道缺少什么。</li>\n<li>4、做题1：根据试错版本，知道自己的知识与经验瓶颈。再深入搜集信息，学习知识。</li>\n<li>5、做题2：根据新信息，改善试错版本&#x2F;开始新版本。</li>\n<li>6、做题3：不断重复步骤四五，丰富信息，打磨版本。</li>\n<li>7、结题：汇总整理前期的做题记录，作结论，写报告。</li>\n</ul>\n<h2 id=\"任务一：APP图标\"><a href=\"#任务一：APP图标\" class=\"headerlink\" title=\"任务一：APP图标\"></a>任务一：APP图标</h2><p>所以，在第四题题目中获取基本信息之后，我下载了Photoshop，搜集市面上所有宠物相关的软件图标，浅找了网课学习，浅回顾了高中美术课的图标设计有关内容（感谢老师，认真讲了，感谢自己，认真学了，认真画了）<br>开始试错任务一：软件图标。</p>\n<h3 id=\"版本一\"><a href=\"#版本一\" class=\"headerlink\" title=\"版本一\"></a>版本一</h3><p>题目限制条件：1、宠物软件；2、焦糖风格；3、创新简洁。</p>\n<p>个人条件：我，一个只会简单ps操作的入门选手，<br>没有数位板，没有pad，纯手绘一个创新、简洁且美观的图标，不太现实。</p>\n<p>解题思路：<br>感谢相关参考资料的建议，以及前两年系统化自学PPT积累的图片与图标资源，<br>我迅速的决定“改图”。从网络中找到合适的图片资源，再在图片的基础上，<br>通过ps，进行融图和修改。（融图：把焦糖图标和找到的图片融合到一起）</p>\n<p>在花瓣网上，我找到了特别合适的融图资源。<br><a href=\"https://imgse.com/i/pAJQvI1\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJQvI1.jpg\" alt=\"版本一底图.jpg\"></a><br>把中间的猫猫抠出来，再把中间的盘子换成焦糖的图标。<br>在此基础上，对照着图标的规格大小，规范化图片。perfect！<br><a href=\"https://imgse.com/i/pAJlpRK\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlpRK.png\" alt=\"版本一图标.png\"></a><br>宠物——可爱的风格，代表性的猫猫</p>\n<p>焦糖风格——焦糖的图标还不够代表焦糖嘛？</p>\n<p>创新简洁——猫猫都简笔画了，当然问题不大。至于焦糖图标不够简单，我把图标颜色调简单一点，解决！</p>\n<p>看起来似乎不错，但是，当我关上电脑，打开手机，盯着那一片的图标，我陷入沉默。这个图标满足要求吗？满足。但是，它真的看起来不像一个图标啊！！！我把图标导出为png图片，放在桌面上，和一众电脑图标对比，这种感觉就更加强烈了。<br>分析一下原因：</p>\n<p>1、我在简洁性上自我欺骗；</p>\n<p>2、就算它和“国家反炸中心”的警徽对比起来，足够简洁，它看起来也不像一个宠物分享平台的图标。猫猫并不是主体，内容与宠物分享风马牛不相及；</p>\n<p>3、元素杂糅，画风微妙。</p>\n<p>以上，促使我做出了版本二。</p>\n<h3 id=\"版本二\"><a href=\"#版本二\" class=\"headerlink\" title=\"版本二\"></a>版本二</h3><p>严格意义上，它甚至不能算是一个版本，算是我的一个没有结果的尝试。同样的融图思路，不同的启发图片。<br><a href=\"https://imgse.com/i/pAJlmJP\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlmJP.jpg\" alt=\"版本二.jpg\"></a><br>比如，将月亮换成焦糖图标，又比如，放大猫猫，将猫猫变得焦糖一点。<br>从我连结果都没有导出，就可以发现，我的尝试比较失败。</p>\n<p>分析原因：</p>\n<p>1、这个猫猫剪影不够简洁，图片来源是是摄影而不是绘画设计。二次创作难以简洁化图片。</p>\n<p>2、黑白剪影好看的前提是简洁的背景（如：虚化后的月亮，纯色），如果将黑白剪影的元素强行与焦糖杂糅，还是会很奇怪。</p>\n<p>3、将黑白猫猫焦糖化在这个图片里不合理且不会好看。</p>\n<p>4、图标往往有格式限制，强制性的由圆转方，减少留白，图片也失去了它原本的意蕴。</p>\n<p>至此，陷入小的僵局。</p>\n<h3 id=\"僵局\"><a href=\"#僵局\" class=\"headerlink\" title=\"僵局\"></a>僵局</h3><ul>\n<li>顺势进入做题步骤四，我再次研究了市面上所有的软件图标（重点：宠物相关软件）。发现以下几类：</li>\n</ul>\n<p>1、用汉字或英文直接重复软件名字+设计感的字+和软件页面契合的配色（如：bilibili，唯品会，天府通，小红书，翼支付，咸鱼）<br>这个方案十分可行，在所有软件图标中占比也大，然而作为招新题，交上去真的有点太水了。</p>\n<p>2、软件代表的吉祥物做图标（如：QQ，菜鸟京东，天猫，淘特，QQ阅读，虎牙直播，AcFun）这个设计方案对绘画要求更高。</p>\n<p>3、抽象表意符号做图标，这种抽象表意符号，往往和软件名或者软件内容有关系。（如：网易云音乐，QQ音乐，剪映，抖音，快手，芒果TV）</p>\n<ul>\n<li>同时灵活运用“git&amp;GitHub”中学到的破局之法，回顾分析试错内容：</li>\n</ul>\n<p>1、融合焦糖元素时，不要过分生硬，直接把logo贴上去。</p>\n<p>2、黑白剪影是可行的，可图片还需要经过精心挑选，融合方式也要再做考虑。</p>\n<p>3、选取的图片素材尽可能风格较明显，或者风格较弱，比较方便融合焦糖元素。</p>\n<h3 id=\"版本三\"><a href=\"#版本三\" class=\"headerlink\" title=\"版本三\"></a>版本三</h3><p>由于我认为黑白剪影是可以再尝试的内容，所以再次寻找了可以的黑白剪影猫猫图。<br><a href=\"https://imgse.com/i/pAJlnRf\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlnRf.png\" alt=\"pAJlnRf.png\"></a><br>我在ps中设置了两个图层，图层一猫猫剪影，图层二放大的焦糖logo。通过蒙版抠图，剪影的黑白色被替换为了焦糖条纹🙂。<br><a href=\"https://imgse.com/i/pAJluz8\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJluz8.png\" alt=\"pAJluz8.png\"></a><br>经过一系列细节调整后，我又又又又又又又发现了问题：这个猫猫整体偏长，做成图标尺寸后，要么尾巴在图像外。要么猫猫主体偏小。这个猫猫过细的身体配上焦糖条纹，略显奇怪。</p>\n<h3 id=\"版本四\"><a href=\"#版本四\" class=\"headerlink\" title=\"版本四\"></a>版本四</h3><p>剪影猫猫的思路是正确的，如何在放大猫猫主体的基础上，展现焦糖风格呢？猫猫主体主要体现在猫猫的头部形状上，那么抛弃偏长的身体，重新使用钢笔工具进行简单绘制，就能得到一张全新的、简洁的焦糖猫猫图标。<br>思路已经有了，但如何以我不高的绘画水平进行绘制仍是问题。<br>看着电脑上残存的猫猫头，我再次神游起来：这个软件应该叫什么名字呢？<br>毕竟，那么多软件图标的母亲都是软件的名字。这个软件名，既要和宠物有关系，<br>又要体现它的功能：宠物分享平台。可能受到猫猫之神的启发，可能因为出题的学姐称“猫”为“猫猫”，<br>我突然灵光一闪：猫猫云！互联网上云吸猫，云养猫，“云”一字不正能体现这个平台的作用嘛？！</p>\n<p>软件名字定了——“猫猫云”，再细看这个猫猫头，它那长长的两根胡须，简直像极了“云”字上面的两条横线。<br>把猫猫头单拎出来，打开钢笔功能，改路径为形状，以云的下半部分为模板，绘制猫猫身体。你别说，有模有样，我特别满意。我的猫猫云图标也就确定下来了：<br>再根据相同方式，与焦糖logo进行融合，挑选配色及融合方案，得到最终的图标。<br><a href=\"https://imgse.com/i/pAJlNWV\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlNWV.png\" alt=\"最终图标.png\"></a></p>\n<h2 id=\"任务二三-需求文档及原型图\"><a href=\"#任务二三-需求文档及原型图\" class=\"headerlink\" title=\"任务二三 需求文档及原型图\"></a>任务二三 需求文档及原型图</h2><h3 id=\"我的做题顺序：\"><a href=\"#我的做题顺序：\" class=\"headerlink\" title=\"我的做题顺序：\"></a>我的做题顺序：</h3><p>1、查找相关资料，了解需求文档与原型图是什么，怎么画；</p>\n<p>2、写需求文档目录，设计“猫猫云”基本功能；</p>\n<p>3、画产品结构图，主要业务流程图；</p>\n<p>4、根据上述两图，绘制原型图；</p>\n<p>5、根据需求文档目录，完善文档内容；</p>\n<h3 id=\"过程总结\"><a href=\"#过程总结\" class=\"headerlink\" title=\"过程总结\"></a>过程总结</h3><p>上述做题顺序看起来岁月静好，无波无浪，然而，在需求文档首次书写中，遇见了很多问题：</p>\n<p>1、软件功能设计的纠结和不自信，导致我在今天10月4日，还在思考这个功能需不需要增加。</p>\n<p>2、信息的混杂，需求文档标准的模糊，让我中途停下，怀疑各种内容，<br>对文档进行反复的细枝末节的修改，耽误时间并且举足不前，不敢往下继续书写。</p>\n<p>3、对于信息来源的忽视，系统的网课其实能比较好的解决问题二，可这条解决方法被我一直忽略。<br>没有总结整理出来一套有逻辑的完整的信息获取路径。</p>\n<p>4、我采用的原型软件是XD，我以七天试用期为截止时间，高效完成了原型图的绘制。<br>得不到的永远在骚动？试用期过了大概四五天，我就对我的原型图再次百般不满，想改又买不起软件。<br>用盗版，又担心网上的链接不安全。感谢崔导，提醒我，还有淘宝这种好东西！</p>\n<p>5、交互说明编写说明编号，画原型图过程中据逻辑顺序给原型图编号，导致交互说明中的编号显得比较混乱，没有逻辑顺序。</p>\n<p>6、非功能需求的技术含量与专业名词相对较多，ddl人在马拉松时期没有完成系统化的学习和了解；</p>\n<p>🙂10月13日的我，看着最后24h的截止时间，本打算再肝一肝需求文档。但是，markdown文档中的图片链接出现了问题。。。目前我只能靠我的pdf勉强维生&#x2F;(ㄒoㄒ)&#x2F;~~。就，再挣扎最后一天吧。。。</p>\n","excerpt":"<p>设计一款焦糖风格的宠物分享平台app~猫猫云！</p>","more":"<h2 id=\"任务信息\"><a href=\"#任务信息\" class=\"headerlink\" title=\"任务信息\"></a>任务信息</h2><h3 id=\"任务一\"><a href=\"#任务一\" class=\"headerlink\" title=\"任务一\"></a>任务一</h3><p>设计该app的图标，具有焦糖特色，创新简洁，工具不限</p>\n<h3 id=\"任务二\"><a href=\"#任务二\" class=\"headerlink\" title=\"任务二\"></a>任务二</h3><p>为这个app取一个好听的名字，并写一份需求分析文档，说明app的基本功能，业务逻辑等<br>该app需包含用户发帖分享宠物日常的基本功能，另需增加至少一项其他与宠物相关的功能模块</p>\n<h3 id=\"任务三\"><a href=\"#任务三\" class=\"headerlink\" title=\"任务三\"></a>任务三</h3><p>绘制该app的原型图，机型不限，需具有焦糖特色</p>\n<h2 id=\"做题基本流程：\"><a href=\"#做题基本流程：\" class=\"headerlink\" title=\"做题基本流程：\"></a>做题基本流程：</h2><ul>\n<li>1、读题：先读题目，获取信息，明确要求；</li>\n<li>2、破题：根据信息，大范围搜集资料，知道题目到底在说些什么，</li>\n<li>3、入题：落实要求，开始试错；只有真正开始上手做了，才会知道缺少什么。</li>\n<li>4、做题1：根据试错版本，知道自己的知识与经验瓶颈。再深入搜集信息，学习知识。</li>\n<li>5、做题2：根据新信息，改善试错版本&#x2F;开始新版本。</li>\n<li>6、做题3：不断重复步骤四五，丰富信息，打磨版本。</li>\n<li>7、结题：汇总整理前期的做题记录，作结论，写报告。</li>\n</ul>\n<h2 id=\"任务一：APP图标\"><a href=\"#任务一：APP图标\" class=\"headerlink\" title=\"任务一：APP图标\"></a>任务一：APP图标</h2><p>所以，在第四题题目中获取基本信息之后，我下载了Photoshop，搜集市面上所有宠物相关的软件图标，浅找了网课学习，浅回顾了高中美术课的图标设计有关内容（感谢老师，认真讲了，感谢自己，认真学了，认真画了）<br>开始试错任务一：软件图标。</p>\n<h3 id=\"版本一\"><a href=\"#版本一\" class=\"headerlink\" title=\"版本一\"></a>版本一</h3><p>题目限制条件：1、宠物软件；2、焦糖风格；3、创新简洁。</p>\n<p>个人条件：我，一个只会简单ps操作的入门选手，<br>没有数位板，没有pad，纯手绘一个创新、简洁且美观的图标，不太现实。</p>\n<p>解题思路：<br>感谢相关参考资料的建议，以及前两年系统化自学PPT积累的图片与图标资源，<br>我迅速的决定“改图”。从网络中找到合适的图片资源，再在图片的基础上，<br>通过ps，进行融图和修改。（融图：把焦糖图标和找到的图片融合到一起）</p>\n<p>在花瓣网上，我找到了特别合适的融图资源。<br><a href=\"https://imgse.com/i/pAJQvI1\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJQvI1.jpg\" alt=\"版本一底图.jpg\"></a><br>把中间的猫猫抠出来，再把中间的盘子换成焦糖的图标。<br>在此基础上，对照着图标的规格大小，规范化图片。perfect！<br><a href=\"https://imgse.com/i/pAJlpRK\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlpRK.png\" alt=\"版本一图标.png\"></a><br>宠物——可爱的风格，代表性的猫猫</p>\n<p>焦糖风格——焦糖的图标还不够代表焦糖嘛？</p>\n<p>创新简洁——猫猫都简笔画了，当然问题不大。至于焦糖图标不够简单，我把图标颜色调简单一点，解决！</p>\n<p>看起来似乎不错，但是，当我关上电脑，打开手机，盯着那一片的图标，我陷入沉默。这个图标满足要求吗？满足。但是，它真的看起来不像一个图标啊！！！我把图标导出为png图片，放在桌面上，和一众电脑图标对比，这种感觉就更加强烈了。<br>分析一下原因：</p>\n<p>1、我在简洁性上自我欺骗；</p>\n<p>2、就算它和“国家反炸中心”的警徽对比起来，足够简洁，它看起来也不像一个宠物分享平台的图标。猫猫并不是主体，内容与宠物分享风马牛不相及；</p>\n<p>3、元素杂糅，画风微妙。</p>\n<p>以上，促使我做出了版本二。</p>\n<h3 id=\"版本二\"><a href=\"#版本二\" class=\"headerlink\" title=\"版本二\"></a>版本二</h3><p>严格意义上，它甚至不能算是一个版本，算是我的一个没有结果的尝试。同样的融图思路，不同的启发图片。<br><a href=\"https://imgse.com/i/pAJlmJP\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlmJP.jpg\" alt=\"版本二.jpg\"></a><br>比如，将月亮换成焦糖图标，又比如，放大猫猫，将猫猫变得焦糖一点。<br>从我连结果都没有导出，就可以发现，我的尝试比较失败。</p>\n<p>分析原因：</p>\n<p>1、这个猫猫剪影不够简洁，图片来源是是摄影而不是绘画设计。二次创作难以简洁化图片。</p>\n<p>2、黑白剪影好看的前提是简洁的背景（如：虚化后的月亮，纯色），如果将黑白剪影的元素强行与焦糖杂糅，还是会很奇怪。</p>\n<p>3、将黑白猫猫焦糖化在这个图片里不合理且不会好看。</p>\n<p>4、图标往往有格式限制，强制性的由圆转方，减少留白，图片也失去了它原本的意蕴。</p>\n<p>至此，陷入小的僵局。</p>\n<h3 id=\"僵局\"><a href=\"#僵局\" class=\"headerlink\" title=\"僵局\"></a>僵局</h3><ul>\n<li>顺势进入做题步骤四，我再次研究了市面上所有的软件图标（重点：宠物相关软件）。发现以下几类：</li>\n</ul>\n<p>1、用汉字或英文直接重复软件名字+设计感的字+和软件页面契合的配色（如：bilibili，唯品会，天府通，小红书，翼支付，咸鱼）<br>这个方案十分可行，在所有软件图标中占比也大，然而作为招新题，交上去真的有点太水了。</p>\n<p>2、软件代表的吉祥物做图标（如：QQ，菜鸟京东，天猫，淘特，QQ阅读，虎牙直播，AcFun）这个设计方案对绘画要求更高。</p>\n<p>3、抽象表意符号做图标，这种抽象表意符号，往往和软件名或者软件内容有关系。（如：网易云音乐，QQ音乐，剪映，抖音，快手，芒果TV）</p>\n<ul>\n<li>同时灵活运用“git&amp;GitHub”中学到的破局之法，回顾分析试错内容：</li>\n</ul>\n<p>1、融合焦糖元素时，不要过分生硬，直接把logo贴上去。</p>\n<p>2、黑白剪影是可行的，可图片还需要经过精心挑选，融合方式也要再做考虑。</p>\n<p>3、选取的图片素材尽可能风格较明显，或者风格较弱，比较方便融合焦糖元素。</p>\n<h3 id=\"版本三\"><a href=\"#版本三\" class=\"headerlink\" title=\"版本三\"></a>版本三</h3><p>由于我认为黑白剪影是可以再尝试的内容，所以再次寻找了可以的黑白剪影猫猫图。<br><a href=\"https://imgse.com/i/pAJlnRf\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlnRf.png\" alt=\"pAJlnRf.png\"></a><br>我在ps中设置了两个图层，图层一猫猫剪影，图层二放大的焦糖logo。通过蒙版抠图，剪影的黑白色被替换为了焦糖条纹🙂。<br><a href=\"https://imgse.com/i/pAJluz8\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJluz8.png\" alt=\"pAJluz8.png\"></a><br>经过一系列细节调整后，我又又又又又又又发现了问题：这个猫猫整体偏长，做成图标尺寸后，要么尾巴在图像外。要么猫猫主体偏小。这个猫猫过细的身体配上焦糖条纹，略显奇怪。</p>\n<h3 id=\"版本四\"><a href=\"#版本四\" class=\"headerlink\" title=\"版本四\"></a>版本四</h3><p>剪影猫猫的思路是正确的，如何在放大猫猫主体的基础上，展现焦糖风格呢？猫猫主体主要体现在猫猫的头部形状上，那么抛弃偏长的身体，重新使用钢笔工具进行简单绘制，就能得到一张全新的、简洁的焦糖猫猫图标。<br>思路已经有了，但如何以我不高的绘画水平进行绘制仍是问题。<br>看着电脑上残存的猫猫头，我再次神游起来：这个软件应该叫什么名字呢？<br>毕竟，那么多软件图标的母亲都是软件的名字。这个软件名，既要和宠物有关系，<br>又要体现它的功能：宠物分享平台。可能受到猫猫之神的启发，可能因为出题的学姐称“猫”为“猫猫”，<br>我突然灵光一闪：猫猫云！互联网上云吸猫，云养猫，“云”一字不正能体现这个平台的作用嘛？！</p>\n<p>软件名字定了——“猫猫云”，再细看这个猫猫头，它那长长的两根胡须，简直像极了“云”字上面的两条横线。<br>把猫猫头单拎出来，打开钢笔功能，改路径为形状，以云的下半部分为模板，绘制猫猫身体。你别说，有模有样，我特别满意。我的猫猫云图标也就确定下来了：<br>再根据相同方式，与焦糖logo进行融合，挑选配色及融合方案，得到最终的图标。<br><a href=\"https://imgse.com/i/pAJlNWV\"><img src=\"https://s21.ax1x.com/2024/10/09/pAJlNWV.png\" alt=\"最终图标.png\"></a></p>\n<h2 id=\"任务二三-需求文档及原型图\"><a href=\"#任务二三-需求文档及原型图\" class=\"headerlink\" title=\"任务二三 需求文档及原型图\"></a>任务二三 需求文档及原型图</h2><h3 id=\"我的做题顺序：\"><a href=\"#我的做题顺序：\" class=\"headerlink\" title=\"我的做题顺序：\"></a>我的做题顺序：</h3><p>1、查找相关资料，了解需求文档与原型图是什么，怎么画；</p>\n<p>2、写需求文档目录，设计“猫猫云”基本功能；</p>\n<p>3、画产品结构图，主要业务流程图；</p>\n<p>4、根据上述两图，绘制原型图；</p>\n<p>5、根据需求文档目录，完善文档内容；</p>\n<h3 id=\"过程总结\"><a href=\"#过程总结\" class=\"headerlink\" title=\"过程总结\"></a>过程总结</h3><p>上述做题顺序看起来岁月静好，无波无浪，然而，在需求文档首次书写中，遇见了很多问题：</p>\n<p>1、软件功能设计的纠结和不自信，导致我在今天10月4日，还在思考这个功能需不需要增加。</p>\n<p>2、信息的混杂，需求文档标准的模糊，让我中途停下，怀疑各种内容，<br>对文档进行反复的细枝末节的修改，耽误时间并且举足不前，不敢往下继续书写。</p>\n<p>3、对于信息来源的忽视，系统的网课其实能比较好的解决问题二，可这条解决方法被我一直忽略。<br>没有总结整理出来一套有逻辑的完整的信息获取路径。</p>\n<p>4、我采用的原型软件是XD，我以七天试用期为截止时间，高效完成了原型图的绘制。<br>得不到的永远在骚动？试用期过了大概四五天，我就对我的原型图再次百般不满，想改又买不起软件。<br>用盗版，又担心网上的链接不安全。感谢崔导，提醒我，还有淘宝这种好东西！</p>\n<p>5、交互说明编写说明编号，画原型图过程中据逻辑顺序给原型图编号，导致交互说明中的编号显得比较混乱，没有逻辑顺序。</p>\n<p>6、非功能需求的技术含量与专业名词相对较多，ddl人在马拉松时期没有完成系统化的学习和了解；</p>\n<p>🙂10月13日的我，看着最后24h的截止时间，本打算再肝一肝需求文档。但是，markdown文档中的图片链接出现了问题。。。目前我只能靠我的pdf勉强维生&#x2F;(ㄒoㄒ)&#x2F;~~。就，再挣扎最后一天吧。。。</p>"},{"title":"git搭建（二）","date":"2024-10-29T03:58:32.000Z","_content":"","source":"_posts/git搭建（二）.md","raw":"---\ntitle: git搭建（二）\ndate: 2024-10-29 11:58:32\ntags:\n---\n","slug":"git搭建（二）","published":1,"updated":"2024-10-29T10:36:19.504Z","comments":1,"layout":"post","photos":[],"_id":"cm2ubvqnu0003f8v8bp5tei49","content":"","excerpt":"","more":""},{"title":"hexo博客","date":"2024-10-29T03:59:33.000Z","_content":"","source":"_posts/hexo博客.md","raw":"---\ntitle: hexo博客\ndate: 2024-10-29 11:59:33\ntags:\n---\n","slug":"hexo博客","published":1,"updated":"2024-10-29T10:36:19.504Z","comments":1,"layout":"post","photos":[],"_id":"cm2ubvqnx0007f8v88ke37lzd","content":"","excerpt":"","more":""},{"title":"力扣刷题笔记","date":"2024-10-10T09:26:08.000Z","_content":"   2024年力扣刷题笔记\n<!--more-->\n## 简单难度\n### 计数器\n请你写一个函数 createCounter。这个函数接收一个初始的整数值 init。并返回一个包含三个函数的对象。\n这三个函数是：\nincrement() 将当前值加 1 并返回。\ndecrement() 将当前值减 1 并返回。\nreset() 将当前值设置为 init 并返回。\n```Javascript\nvar createCounter = function(init){\n    let count = init;\n    return{\n        increment:function(){\n            count++;\n            return count;\n        },\n        decrement:function(){\n            count--;\n            return count;\n        },\n        reset:function(){\n            count = init;\n            return count;\n        }\n    }\n}\n```\n* <font color=red>定义一个新对象，直接用大括号引入，或用对象字面量/构造函数/class语法/object.create()方法创建</font>\n* <font color=red>方法间用逗号隔开，并用冒号 : 进行定义</font>\n\n### 数组原型对象的最后一个元素\n请你编写一段代码实现一个数组方法，使任何数组都可以调用 array.last() 方法，这个方法将返回数组最后一个元素。如果数组中没有元素，则返回 -1 。\n```Javascript\n    Array.prototype.last = function() {\n        if (this.length == 0){ \n            return -1;\n        }else{\n            let len = this.length;\n            return this[len - 1]; \n        }\n    };\n```\n<font color=red>注意：在函数中并未传入数组参数，使用this指向调用该方法的对象</font>\n\n### 睡眠函数\n请你编写一个异步函数，它接收一个正整数参数 millis ，并休眠 millis 毫秒。要求此函数可以解析任何值。\n```Javascript\n示例 1：\n输入：millis = 100\n输出：100\n解释：\n在 100ms 后此异步函数执行完时返回一个 Promise 对象\nlet t = Date.now();\nsleep(100).then(() => {\n  console.log(Date.now() - t); // 100\n});\n```\n   ```Javascript\n   async function sleep(millis) {\n          return new Promise(（resolve） =>{\n            setTimeout(() => {resolve(millis)}, millis);\n          } \n    }\n```\n\n* <font color=red>题目要求返回一个对象  </font>\n* <font color=red>利用resolve参数，改变Promise状态，进而传递参数</font>\n* <font color=red>Promise是Js的一个内置对象，用于表示一个异步操作的状态，而不是所有对象都是new Promise()</font>\n\n### 生成斐波那契数列\n请你编写一个生成器函数，并返回一个可以生成 斐波那契数列 的生成器对象。\n斐波那契数列 的递推公式为 Xn = Xn-1 + Xn-2 。\n这个数列的前几个数字是 0, 1, 1, 2, 3, 5, 8, 13 。\n```Javascript\nvar fibGenerator = function*() {\n    let a = 0;\n    let b = 1;\n    let c;\n    while(1){\n        yield a;\n        c = a;\n        a = a + b;\n        b = c;\n    }\n}\n```\n* <font color=red>yield：是js中用来定义生成器函数的关键字，可在函数中暂停执行，并返回一个值，下次调用next（）方法时，从上次暂停的地方继续执行</font>\n* <font color=red>生成器函数：通过在函数定义前加上星号 * 来创建一个生成器函数，例如 function* myGenerator() {} </font>\n\n\n### 数组分块\n给定一个数组 arr 和一个块大小 size ，返回一个 分块 的数组。\n分块 的数组包含了 arr 中的原始元素，但是每个子数组的长度都是 size 。如果 arr.length 不能被 size 整除，那么最后一个子数组的长度可能小于 size 。\n你可以假设该数组是 JSON.parse 的输出结果。换句话说，它是有效的JSON。\n请你在不使用 lodash 的函数 _.chunk 的情况下解决这个问题。\n```Javascript\nvar chunk = function(arr, size) {\n    const arrRes = [];\n    while(arr.length) {\n        arrRes.push(arr.splice(0, size));\n    }\n    return arrRes;\n};\n```\n* <font color=red>使用数组常用方法splice或slice解决</font>\n\n### 包装数组\n创建一个名为 ArrayWrapper 的类，它在其构造函数中接受一个整数数组作为参数。该类应具有以下两个特性：\n当使用 + 运算符将两个该类的实例相加时，结果值为两个数组中所有元素的总和。\n当在实例上调用 String() 函数时，它将返回一个由逗号分隔的括在方括号中的字符串。例如，[1,2,3] 。\n```Javascript\nvar ArrayWrapper = function(nums) {\n    // 将传入的数组赋值给实例属性\n    this.nums = nums;\n};\nArrayWrapper.prototype.valueOf = function() {\n    // 计算数组中所有元素的和并返回\n    return this.nums.reduce((sum, num) => sum + num, 0);\n}\nArrayWrapper.prototype.toString = function() {\n    // 将数组转换为字符串格式\n    return `[${this.nums.join(',')}]`;\n}\n```\n* <font color=red>模板字符串，${}引用表达式</font>\n* <font color=red>使用 throw new Error('这是一个错误信息') 抛出异常</font>\n\n### 执行可取消的延迟函数\n给定一个函数 fn ，一个参数数组 args 和一个以毫秒为单位的超时时间 t ，返回一个取消函数 cancelFn 。\n在 cancelTimeMs 的延迟后，返回的取消函数 cancelFn 将被调用。\nsetTimeout(cancelFn, cancelTimeMs)\n最初，函数 fn 的执行应该延迟 t 毫秒。\n如果在 t 毫秒的延迟之前调用了函数 cancelFn，它应该取消 fn 的延迟执行。否则，如果在指定的延迟 t 内没有调用 cancelFn，则应执行 fn，并使用提供的 args 作为参数。\n```Javascript\n示例 1:\n\n输入：fn = (x) => x * 5, args = [2], t = 20\n输出：[{\"time\": 20, \"returned\": 10}]\n解释：\nconst cancelTimeMs = 50;\nconst cancelFn = cancellable((x) => x * 5, [2], 20);\nsetTimeout(cancelFn, cancelTimeMs);\n\n取消操作被安排在延迟了 cancelTimeMs（50毫秒）后进行，这发生在 fn(2) 在20毫秒时执行之后。\n```\n```Javascript\nVar cancellable = function(fn,args,t){\n    let timeoutID;\n    const cancelFn = function(){\n        clearTimeout(timeoutID);\n    }\n    timeoutID = setTimeout(()=>{fn(args);},t);\n    Return cancelFn;\n}\n```\n* <font color=red>注意题目中对cancelFn的功能需求，第二个setTimout函数是在cancellable之外执行，本很熟只需要创建一个函数，调用能取消setTimeout的函数即可</font>\n\n### 排序方式\n给定一个数组 arr 和一个函数 fn，返回一个排序后的数组 sortedArr。你可以假设 fn 只返回数字，并且这些数字决定了 sortedArr 的排序顺序。sortedArr 必须按照 fn 的输出值 升序 排序。\n```Javascript\nvar sortBy = function(arr, fn) {\n    let sortedArr = arr.sort((a,b)=>fn(a)-fn(b));\n    return sortedArr\n}\n```\n* <font color=red>.sort()方法可以接收一个比较函数，该函数接收两个参数，返回一个负数、零或正数，用来决定两个元素的相对顺序。\n负数：第一个参数排在第二个参数前；\n正数：第一个参数排在第二个参数后；\n零：两个参数相等。</font>\n\n### 间隔取消（setTimeout重复调用）\n现给定一个函数 fn，一个参数数组 args 和一个时间间隔 t，返回一个取消函数 cancelFn。\n\n在经过 cancelTimeMs 毫秒的延迟后，将调用返回的取消函数 cancelFn。\n\nsetTimeout(cancelFn, cancelTimeMs)\n函数 fn 应立即使用参数 args 调用，然后每隔 t 毫秒调用一次，直到在 cancelTimeMs 毫秒时调用 cancelFn。\n```javascript\nvar cancellable = function(fn, args, t) {\n    let timeoutID;\n    let status = true;\n    const cancleFn = function(){\n        clearTimeout(timeoutID);\n        status = false;\n    }\n    const repeatsetTime = function(){\n        if(status){//判断条件在函数内部进行循环\n            fn(...args);//使用...args展开参数数组，fn接收任意数量的参数\n            timeoutID = setTimeout(repeatsetTime,t);//每次都调用repeatsetTime，而非fn（...args）\n        }\n    }\n    fn(...args);\n    timeoutID = setTimeout(repeatsetTime,t);//启动第一次调用\n    return cancleFn;\n};\n```\n* <font color=red>也可以使用setInterval实现间隔调用，但是需要注意 clearInterval的使用</font>\n* <font color=red>正确的幂运算 result = Math.pow(a,x)</font>\n\n### 判断为空\n给定一个对象或数组，判断它是否为空。\n\n一个空对象不包含任何键值对。\n一个空数组不包含任何元素。\n你可以假设对象或数组是通过 JSON.parse 解析得到的。\n\n ```javascript\n var isEmpty = function(obj) {\n    if(Array.isArray(obj)){\n        if(obj.length == 0){\n            return true\n        }else{\n            return false\n        }\n    }else if(typeof obj === 'object' && obj !== null){\n        return Object.keys(obj).length === 0;\n    }else{\n        return false\n    }\n};\n```\n* <font color=red>typeof null === 'object'，所以需要判断null</font>\n* <font color=red>Object.keys()返回一个数组，包含对象obj的键值;length属性返回数组的长度</font>\n","source":"_posts/力扣刷题笔记.md","raw":"---\ntitle: 力扣刷题笔记\ndate: 2024-10-10 17:26:08\ntags: leetcode\ncategories: 编程学习\n---\n   2024年力扣刷题笔记\n<!--more-->\n## 简单难度\n### 计数器\n请你写一个函数 createCounter。这个函数接收一个初始的整数值 init。并返回一个包含三个函数的对象。\n这三个函数是：\nincrement() 将当前值加 1 并返回。\ndecrement() 将当前值减 1 并返回。\nreset() 将当前值设置为 init 并返回。\n```Javascript\nvar createCounter = function(init){\n    let count = init;\n    return{\n        increment:function(){\n            count++;\n            return count;\n        },\n        decrement:function(){\n            count--;\n            return count;\n        },\n        reset:function(){\n            count = init;\n            return count;\n        }\n    }\n}\n```\n* <font color=red>定义一个新对象，直接用大括号引入，或用对象字面量/构造函数/class语法/object.create()方法创建</font>\n* <font color=red>方法间用逗号隔开，并用冒号 : 进行定义</font>\n\n### 数组原型对象的最后一个元素\n请你编写一段代码实现一个数组方法，使任何数组都可以调用 array.last() 方法，这个方法将返回数组最后一个元素。如果数组中没有元素，则返回 -1 。\n```Javascript\n    Array.prototype.last = function() {\n        if (this.length == 0){ \n            return -1;\n        }else{\n            let len = this.length;\n            return this[len - 1]; \n        }\n    };\n```\n<font color=red>注意：在函数中并未传入数组参数，使用this指向调用该方法的对象</font>\n\n### 睡眠函数\n请你编写一个异步函数，它接收一个正整数参数 millis ，并休眠 millis 毫秒。要求此函数可以解析任何值。\n```Javascript\n示例 1：\n输入：millis = 100\n输出：100\n解释：\n在 100ms 后此异步函数执行完时返回一个 Promise 对象\nlet t = Date.now();\nsleep(100).then(() => {\n  console.log(Date.now() - t); // 100\n});\n```\n   ```Javascript\n   async function sleep(millis) {\n          return new Promise(（resolve） =>{\n            setTimeout(() => {resolve(millis)}, millis);\n          } \n    }\n```\n\n* <font color=red>题目要求返回一个对象  </font>\n* <font color=red>利用resolve参数，改变Promise状态，进而传递参数</font>\n* <font color=red>Promise是Js的一个内置对象，用于表示一个异步操作的状态，而不是所有对象都是new Promise()</font>\n\n### 生成斐波那契数列\n请你编写一个生成器函数，并返回一个可以生成 斐波那契数列 的生成器对象。\n斐波那契数列 的递推公式为 Xn = Xn-1 + Xn-2 。\n这个数列的前几个数字是 0, 1, 1, 2, 3, 5, 8, 13 。\n```Javascript\nvar fibGenerator = function*() {\n    let a = 0;\n    let b = 1;\n    let c;\n    while(1){\n        yield a;\n        c = a;\n        a = a + b;\n        b = c;\n    }\n}\n```\n* <font color=red>yield：是js中用来定义生成器函数的关键字，可在函数中暂停执行，并返回一个值，下次调用next（）方法时，从上次暂停的地方继续执行</font>\n* <font color=red>生成器函数：通过在函数定义前加上星号 * 来创建一个生成器函数，例如 function* myGenerator() {} </font>\n\n\n### 数组分块\n给定一个数组 arr 和一个块大小 size ，返回一个 分块 的数组。\n分块 的数组包含了 arr 中的原始元素，但是每个子数组的长度都是 size 。如果 arr.length 不能被 size 整除，那么最后一个子数组的长度可能小于 size 。\n你可以假设该数组是 JSON.parse 的输出结果。换句话说，它是有效的JSON。\n请你在不使用 lodash 的函数 _.chunk 的情况下解决这个问题。\n```Javascript\nvar chunk = function(arr, size) {\n    const arrRes = [];\n    while(arr.length) {\n        arrRes.push(arr.splice(0, size));\n    }\n    return arrRes;\n};\n```\n* <font color=red>使用数组常用方法splice或slice解决</font>\n\n### 包装数组\n创建一个名为 ArrayWrapper 的类，它在其构造函数中接受一个整数数组作为参数。该类应具有以下两个特性：\n当使用 + 运算符将两个该类的实例相加时，结果值为两个数组中所有元素的总和。\n当在实例上调用 String() 函数时，它将返回一个由逗号分隔的括在方括号中的字符串。例如，[1,2,3] 。\n```Javascript\nvar ArrayWrapper = function(nums) {\n    // 将传入的数组赋值给实例属性\n    this.nums = nums;\n};\nArrayWrapper.prototype.valueOf = function() {\n    // 计算数组中所有元素的和并返回\n    return this.nums.reduce((sum, num) => sum + num, 0);\n}\nArrayWrapper.prototype.toString = function() {\n    // 将数组转换为字符串格式\n    return `[${this.nums.join(',')}]`;\n}\n```\n* <font color=red>模板字符串，${}引用表达式</font>\n* <font color=red>使用 throw new Error('这是一个错误信息') 抛出异常</font>\n\n### 执行可取消的延迟函数\n给定一个函数 fn ，一个参数数组 args 和一个以毫秒为单位的超时时间 t ，返回一个取消函数 cancelFn 。\n在 cancelTimeMs 的延迟后，返回的取消函数 cancelFn 将被调用。\nsetTimeout(cancelFn, cancelTimeMs)\n最初，函数 fn 的执行应该延迟 t 毫秒。\n如果在 t 毫秒的延迟之前调用了函数 cancelFn，它应该取消 fn 的延迟执行。否则，如果在指定的延迟 t 内没有调用 cancelFn，则应执行 fn，并使用提供的 args 作为参数。\n```Javascript\n示例 1:\n\n输入：fn = (x) => x * 5, args = [2], t = 20\n输出：[{\"time\": 20, \"returned\": 10}]\n解释：\nconst cancelTimeMs = 50;\nconst cancelFn = cancellable((x) => x * 5, [2], 20);\nsetTimeout(cancelFn, cancelTimeMs);\n\n取消操作被安排在延迟了 cancelTimeMs（50毫秒）后进行，这发生在 fn(2) 在20毫秒时执行之后。\n```\n```Javascript\nVar cancellable = function(fn,args,t){\n    let timeoutID;\n    const cancelFn = function(){\n        clearTimeout(timeoutID);\n    }\n    timeoutID = setTimeout(()=>{fn(args);},t);\n    Return cancelFn;\n}\n```\n* <font color=red>注意题目中对cancelFn的功能需求，第二个setTimout函数是在cancellable之外执行，本很熟只需要创建一个函数，调用能取消setTimeout的函数即可</font>\n\n### 排序方式\n给定一个数组 arr 和一个函数 fn，返回一个排序后的数组 sortedArr。你可以假设 fn 只返回数字，并且这些数字决定了 sortedArr 的排序顺序。sortedArr 必须按照 fn 的输出值 升序 排序。\n```Javascript\nvar sortBy = function(arr, fn) {\n    let sortedArr = arr.sort((a,b)=>fn(a)-fn(b));\n    return sortedArr\n}\n```\n* <font color=red>.sort()方法可以接收一个比较函数，该函数接收两个参数，返回一个负数、零或正数，用来决定两个元素的相对顺序。\n负数：第一个参数排在第二个参数前；\n正数：第一个参数排在第二个参数后；\n零：两个参数相等。</font>\n\n### 间隔取消（setTimeout重复调用）\n现给定一个函数 fn，一个参数数组 args 和一个时间间隔 t，返回一个取消函数 cancelFn。\n\n在经过 cancelTimeMs 毫秒的延迟后，将调用返回的取消函数 cancelFn。\n\nsetTimeout(cancelFn, cancelTimeMs)\n函数 fn 应立即使用参数 args 调用，然后每隔 t 毫秒调用一次，直到在 cancelTimeMs 毫秒时调用 cancelFn。\n```javascript\nvar cancellable = function(fn, args, t) {\n    let timeoutID;\n    let status = true;\n    const cancleFn = function(){\n        clearTimeout(timeoutID);\n        status = false;\n    }\n    const repeatsetTime = function(){\n        if(status){//判断条件在函数内部进行循环\n            fn(...args);//使用...args展开参数数组，fn接收任意数量的参数\n            timeoutID = setTimeout(repeatsetTime,t);//每次都调用repeatsetTime，而非fn（...args）\n        }\n    }\n    fn(...args);\n    timeoutID = setTimeout(repeatsetTime,t);//启动第一次调用\n    return cancleFn;\n};\n```\n* <font color=red>也可以使用setInterval实现间隔调用，但是需要注意 clearInterval的使用</font>\n* <font color=red>正确的幂运算 result = Math.pow(a,x)</font>\n\n### 判断为空\n给定一个对象或数组，判断它是否为空。\n\n一个空对象不包含任何键值对。\n一个空数组不包含任何元素。\n你可以假设对象或数组是通过 JSON.parse 解析得到的。\n\n ```javascript\n var isEmpty = function(obj) {\n    if(Array.isArray(obj)){\n        if(obj.length == 0){\n            return true\n        }else{\n            return false\n        }\n    }else if(typeof obj === 'object' && obj !== null){\n        return Object.keys(obj).length === 0;\n    }else{\n        return false\n    }\n};\n```\n* <font color=red>typeof null === 'object'，所以需要判断null</font>\n* <font color=red>Object.keys()返回一个数组，包含对象obj的键值;length属性返回数组的长度</font>\n","slug":"力扣刷题笔记","published":1,"updated":"2024-10-29T10:36:19.504Z","comments":1,"layout":"post","photos":[],"_id":"cm2ubvqny0008f8v8g9cubj08","content":"<p>   2024年力扣刷题笔记</p>\n<span id=\"more\"></span>\n<h2 id=\"简单难度\"><a href=\"#简单难度\" class=\"headerlink\" title=\"简单难度\"></a>简单难度</h2><h3 id=\"计数器\"><a href=\"#计数器\" class=\"headerlink\" title=\"计数器\"></a>计数器</h3><p>请你写一个函数 createCounter。这个函数接收一个初始的整数值 init。并返回一个包含三个函数的对象。<br>这三个函数是：<br>increment() 将当前值加 1 并返回。<br>decrement() 将当前值减 1 并返回。<br>reset() 将当前值设置为 init 并返回。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> createCounter = <span class=\"keyword\">function</span>(<span class=\"params\">init</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = init;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        <span class=\"attr\">increment</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">decrement</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            count--;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">reset</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            count = init;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>定义一个新对象，直接用大括号引入，或用对象字面量&#x2F;构造函数&#x2F;class语法&#x2F;object.create()方法创建</font></li>\n<li><font color=red>方法间用逗号隔开，并用冒号 : 进行定义</font></li>\n</ul>\n<h3 id=\"数组原型对象的最后一个元素\"><a href=\"#数组原型对象的最后一个元素\" class=\"headerlink\" title=\"数组原型对象的最后一个元素\"></a>数组原型对象的最后一个元素</h3><p>请你编写一段代码实现一个数组方法，使任何数组都可以调用 array.last() 方法，这个方法将返回数组最后一个元素。如果数组中没有元素，则返回 -1 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">last</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">length</span> == <span class=\"number\">0</span>)&#123; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> len = <span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>[len - <span class=\"number\">1</span>]; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><font color=red>注意：在函数中并未传入数组参数，使用this指向调用该方法的对象</font></p>\n<h3 id=\"睡眠函数\"><a href=\"#睡眠函数\" class=\"headerlink\" title=\"睡眠函数\"></a>睡眠函数</h3><p>请你编写一个异步函数，它接收一个正整数参数 millis ，并休眠 millis 毫秒。要求此函数可以解析任何值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例 <span class=\"number\">1</span>：</span><br><span class=\"line\">输入：millis = <span class=\"number\">100</span></span><br><span class=\"line\">输出：<span class=\"number\">100</span></span><br><span class=\"line\">解释：</span><br><span class=\"line\">在 100ms 后此异步函数执行完时返回一个 <span class=\"title class_\">Promise</span> 对象</span><br><span class=\"line\"><span class=\"keyword\">let</span> t = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\"><span class=\"title function_\">sleep</span>(<span class=\"number\">100</span>).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>() - t); <span class=\"comment\">// 100</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">sleep</span>(<span class=\"params\">millis</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(（resolve） =&gt;&#123;</span><br><span class=\"line\">         <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;<span class=\"title function_\">resolve</span>(millis)&#125;, millis);</span><br><span class=\"line\">       &#125; </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><font color=red>题目要求返回一个对象  </font></li>\n<li><font color=red>利用resolve参数，改变Promise状态，进而传递参数</font></li>\n<li><font color=red>Promise是Js的一个内置对象，用于表示一个异步操作的状态，而不是所有对象都是new Promise()</font></li>\n</ul>\n<h3 id=\"生成斐波那契数列\"><a href=\"#生成斐波那契数列\" class=\"headerlink\" title=\"生成斐波那契数列\"></a>生成斐波那契数列</h3><p>请你编写一个生成器函数，并返回一个可以生成 斐波那契数列 的生成器对象。<br>斐波那契数列 的递推公式为 Xn &#x3D; Xn-1 + Xn-2 。<br>这个数列的前几个数字是 0, 1, 1, 2, 3, 5, 8, 13 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fibGenerator = <span class=\"keyword\">function</span>*() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> c;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a;</span><br><span class=\"line\">        c = a;</span><br><span class=\"line\">        a = a + b;</span><br><span class=\"line\">        b = c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>yield：是js中用来定义生成器函数的关键字，可在函数中暂停执行，并返回一个值，下次调用next（）方法时，从上次暂停的地方继续执行</font></li>\n<li><font color=red>生成器函数：通过在函数定义前加上星号 * 来创建一个生成器函数，例如 function* myGenerator() {} </font></li>\n</ul>\n<h3 id=\"数组分块\"><a href=\"#数组分块\" class=\"headerlink\" title=\"数组分块\"></a>数组分块</h3><p>给定一个数组 arr 和一个块大小 size ，返回一个 分块 的数组。<br>分块 的数组包含了 arr 中的原始元素，但是每个子数组的长度都是 size 。如果 arr.length 不能被 size 整除，那么最后一个子数组的长度可能小于 size 。<br>你可以假设该数组是 JSON.parse 的输出结果。换句话说，它是有效的JSON。<br>请你在不使用 lodash 的函数 _.chunk 的情况下解决这个问题。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chunk = <span class=\"keyword\">function</span>(<span class=\"params\">arr, size</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arrRes = [];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(arr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        arrRes.<span class=\"title function_\">push</span>(arr.<span class=\"title function_\">splice</span>(<span class=\"number\">0</span>, size));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arrRes;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>使用数组常用方法splice或slice解决</font></li>\n</ul>\n<h3 id=\"包装数组\"><a href=\"#包装数组\" class=\"headerlink\" title=\"包装数组\"></a>包装数组</h3><p>创建一个名为 ArrayWrapper 的类，它在其构造函数中接受一个整数数组作为参数。该类应具有以下两个特性：<br>当使用 + 运算符将两个该类的实例相加时，结果值为两个数组中所有元素的总和。<br>当在实例上调用 String() 函数时，它将返回一个由逗号分隔的括在方括号中的字符串。例如，[1,2,3] 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ArrayWrapper</span> = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将传入的数组赋值给实例属性</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span> = nums;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">ArrayWrapper</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">valueOf</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 计算数组中所有元素的和并返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span>.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">sum, num</span>) =&gt;</span> sum + num, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">ArrayWrapper</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将数组转换为字符串格式</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`[<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.nums.join(<span class=\"string\">&#x27;,&#x27;</span>)&#125;</span>]`</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>模板字符串，${}引用表达式</font></li>\n<li><font color=red>使用 throw new Error(‘这是一个错误信息’) 抛出异常</font></li>\n</ul>\n<h3 id=\"执行可取消的延迟函数\"><a href=\"#执行可取消的延迟函数\" class=\"headerlink\" title=\"执行可取消的延迟函数\"></a>执行可取消的延迟函数</h3><p>给定一个函数 fn ，一个参数数组 args 和一个以毫秒为单位的超时时间 t ，返回一个取消函数 cancelFn 。<br>在 cancelTimeMs 的延迟后，返回的取消函数 cancelFn 将被调用。<br>setTimeout(cancelFn, cancelTimeMs)<br>最初，函数 fn 的执行应该延迟 t 毫秒。<br>如果在 t 毫秒的延迟之前调用了函数 cancelFn，它应该取消 fn 的延迟执行。否则，如果在指定的延迟 t 内没有调用 cancelFn，则应执行 fn，并使用提供的 args 作为参数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例 <span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">输入：fn = <span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> x * <span class=\"number\">5</span>, args = [<span class=\"number\">2</span>], t = <span class=\"number\">20</span></span><br><span class=\"line\">输出：[&#123;<span class=\"string\">&quot;time&quot;</span>: <span class=\"number\">20</span>, <span class=\"string\">&quot;returned&quot;</span>: <span class=\"number\">10</span>&#125;]</span><br><span class=\"line\">解释：</span><br><span class=\"line\"><span class=\"keyword\">const</span> cancelTimeMs = <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> cancelFn = <span class=\"title function_\">cancellable</span>(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> x * <span class=\"number\">5</span>, [<span class=\"number\">2</span>], <span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(cancelFn, cancelTimeMs);</span><br><span class=\"line\"></span><br><span class=\"line\">取消操作被安排在延迟了 cancelTimeMs（<span class=\"number\">50</span>毫秒）后进行，这发生在 <span class=\"title function_\">fn</span>(<span class=\"number\">2</span>) 在<span class=\"number\">20</span>毫秒时执行之后。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Var</span> cancellable = <span class=\"keyword\">function</span>(<span class=\"params\">fn,args,t</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeoutID;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> cancelFn = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timeoutID);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timeoutID = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;<span class=\"title function_\">fn</span>(args);&#125;,t);</span><br><span class=\"line\">    <span class=\"title class_\">Return</span> cancelFn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>注意题目中对cancelFn的功能需求，第二个setTimout函数是在cancellable之外执行，本很熟只需要创建一个函数，调用能取消setTimeout的函数即可</font></li>\n</ul>\n<h3 id=\"排序方式\"><a href=\"#排序方式\" class=\"headerlink\" title=\"排序方式\"></a>排序方式</h3><p>给定一个数组 arr 和一个函数 fn，返回一个排序后的数组 sortedArr。你可以假设 fn 只返回数字，并且这些数字决定了 sortedArr 的排序顺序。sortedArr 必须按照 fn 的输出值 升序 排序。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sortBy = <span class=\"keyword\">function</span>(<span class=\"params\">arr, fn</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sortedArr = arr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span><span class=\"title function_\">fn</span>(a)-<span class=\"title function_\">fn</span>(b));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sortedArr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>.sort()方法可以接收一个比较函数，该函数接收两个参数，返回一个负数、零或正数，用来决定两个元素的相对顺序。<br>负数：第一个参数排在第二个参数前；<br>正数：第一个参数排在第二个参数后；<br>零：两个参数相等。</font></li>\n</ul>\n<h3 id=\"间隔取消（setTimeout重复调用）\"><a href=\"#间隔取消（setTimeout重复调用）\" class=\"headerlink\" title=\"间隔取消（setTimeout重复调用）\"></a>间隔取消（setTimeout重复调用）</h3><p>现给定一个函数 fn，一个参数数组 args 和一个时间间隔 t，返回一个取消函数 cancelFn。</p>\n<p>在经过 cancelTimeMs 毫秒的延迟后，将调用返回的取消函数 cancelFn。</p>\n<p>setTimeout(cancelFn, cancelTimeMs)<br>函数 fn 应立即使用参数 args 调用，然后每隔 t 毫秒调用一次，直到在 cancelTimeMs 毫秒时调用 cancelFn。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cancellable = <span class=\"keyword\">function</span>(<span class=\"params\">fn, args, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeoutID;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> status = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> cancleFn = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timeoutID);</span><br><span class=\"line\">        status = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repeatsetTime = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(status)&#123;<span class=\"comment\">//判断条件在函数内部进行循环</span></span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(...args);<span class=\"comment\">//使用...args展开参数数组，fn接收任意数量的参数</span></span><br><span class=\"line\">            timeoutID = <span class=\"built_in\">setTimeout</span>(repeatsetTime,t);<span class=\"comment\">//每次都调用repeatsetTime，而非fn（...args）</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">fn</span>(...args);</span><br><span class=\"line\">    timeoutID = <span class=\"built_in\">setTimeout</span>(repeatsetTime,t);<span class=\"comment\">//启动第一次调用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> cancleFn;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>也可以使用setInterval实现间隔调用，但是需要注意 clearInterval的使用</font></li>\n<li><font color=red>正确的幂运算 result &#x3D; Math.pow(a,x)</font></li>\n</ul>\n<h3 id=\"判断为空\"><a href=\"#判断为空\" class=\"headerlink\" title=\"判断为空\"></a>判断为空</h3><p>给定一个对象或数组，判断它是否为空。</p>\n<p>一个空对象不包含任何键值对。<br>一个空数组不包含任何元素。<br>你可以假设对象或数组是通过 JSON.parse 解析得到的。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> isEmpty = <span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(obj))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj.<span class=\"property\">length</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> obj === <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; obj !== <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(obj).<span class=\"property\">length</span> === <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>typeof null &#x3D;&#x3D;&#x3D; ‘object’，所以需要判断null</font></li>\n<li><font color=red>Object.keys()返回一个数组，包含对象obj的键值;length属性返回数组的长度</font></li>\n</ul>\n","excerpt":"<p>   2024年力扣刷题笔记</p>","more":"<h2 id=\"简单难度\"><a href=\"#简单难度\" class=\"headerlink\" title=\"简单难度\"></a>简单难度</h2><h3 id=\"计数器\"><a href=\"#计数器\" class=\"headerlink\" title=\"计数器\"></a>计数器</h3><p>请你写一个函数 createCounter。这个函数接收一个初始的整数值 init。并返回一个包含三个函数的对象。<br>这三个函数是：<br>increment() 将当前值加 1 并返回。<br>decrement() 将当前值减 1 并返回。<br>reset() 将当前值设置为 init 并返回。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> createCounter = <span class=\"keyword\">function</span>(<span class=\"params\">init</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> count = init;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        <span class=\"attr\">increment</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">decrement</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            count--;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">reset</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            count = init;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>定义一个新对象，直接用大括号引入，或用对象字面量&#x2F;构造函数&#x2F;class语法&#x2F;object.create()方法创建</font></li>\n<li><font color=red>方法间用逗号隔开，并用冒号 : 进行定义</font></li>\n</ul>\n<h3 id=\"数组原型对象的最后一个元素\"><a href=\"#数组原型对象的最后一个元素\" class=\"headerlink\" title=\"数组原型对象的最后一个元素\"></a>数组原型对象的最后一个元素</h3><p>请你编写一段代码实现一个数组方法，使任何数组都可以调用 array.last() 方法，这个方法将返回数组最后一个元素。如果数组中没有元素，则返回 -1 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Array</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">last</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">length</span> == <span class=\"number\">0</span>)&#123; </span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> len = <span class=\"variable language_\">this</span>.<span class=\"property\">length</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>[len - <span class=\"number\">1</span>]; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><font color=red>注意：在函数中并未传入数组参数，使用this指向调用该方法的对象</font></p>\n<h3 id=\"睡眠函数\"><a href=\"#睡眠函数\" class=\"headerlink\" title=\"睡眠函数\"></a>睡眠函数</h3><p>请你编写一个异步函数，它接收一个正整数参数 millis ，并休眠 millis 毫秒。要求此函数可以解析任何值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例 <span class=\"number\">1</span>：</span><br><span class=\"line\">输入：millis = <span class=\"number\">100</span></span><br><span class=\"line\">输出：<span class=\"number\">100</span></span><br><span class=\"line\">解释：</span><br><span class=\"line\">在 100ms 后此异步函数执行完时返回一个 <span class=\"title class_\">Promise</span> 对象</span><br><span class=\"line\"><span class=\"keyword\">let</span> t = <span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>();</span><br><span class=\"line\"><span class=\"title function_\">sleep</span>(<span class=\"number\">100</span>).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Date</span>.<span class=\"title function_\">now</span>() - t); <span class=\"comment\">// 100</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n   <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">sleep</span>(<span class=\"params\">millis</span>) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(（resolve） =&gt;&#123;</span><br><span class=\"line\">         <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;<span class=\"title function_\">resolve</span>(millis)&#125;, millis);</span><br><span class=\"line\">       &#125; </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><font color=red>题目要求返回一个对象  </font></li>\n<li><font color=red>利用resolve参数，改变Promise状态，进而传递参数</font></li>\n<li><font color=red>Promise是Js的一个内置对象，用于表示一个异步操作的状态，而不是所有对象都是new Promise()</font></li>\n</ul>\n<h3 id=\"生成斐波那契数列\"><a href=\"#生成斐波那契数列\" class=\"headerlink\" title=\"生成斐波那契数列\"></a>生成斐波那契数列</h3><p>请你编写一个生成器函数，并返回一个可以生成 斐波那契数列 的生成器对象。<br>斐波那契数列 的递推公式为 Xn &#x3D; Xn-1 + Xn-2 。<br>这个数列的前几个数字是 0, 1, 1, 2, 3, 5, 8, 13 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fibGenerator = <span class=\"keyword\">function</span>*() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> b = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> c;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a;</span><br><span class=\"line\">        c = a;</span><br><span class=\"line\">        a = a + b;</span><br><span class=\"line\">        b = c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>yield：是js中用来定义生成器函数的关键字，可在函数中暂停执行，并返回一个值，下次调用next（）方法时，从上次暂停的地方继续执行</font></li>\n<li><font color=red>生成器函数：通过在函数定义前加上星号 * 来创建一个生成器函数，例如 function* myGenerator() {} </font></li>\n</ul>\n<h3 id=\"数组分块\"><a href=\"#数组分块\" class=\"headerlink\" title=\"数组分块\"></a>数组分块</h3><p>给定一个数组 arr 和一个块大小 size ，返回一个 分块 的数组。<br>分块 的数组包含了 arr 中的原始元素，但是每个子数组的长度都是 size 。如果 arr.length 不能被 size 整除，那么最后一个子数组的长度可能小于 size 。<br>你可以假设该数组是 JSON.parse 的输出结果。换句话说，它是有效的JSON。<br>请你在不使用 lodash 的函数 _.chunk 的情况下解决这个问题。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> chunk = <span class=\"keyword\">function</span>(<span class=\"params\">arr, size</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> arrRes = [];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(arr.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">        arrRes.<span class=\"title function_\">push</span>(arr.<span class=\"title function_\">splice</span>(<span class=\"number\">0</span>, size));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arrRes;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>使用数组常用方法splice或slice解决</font></li>\n</ul>\n<h3 id=\"包装数组\"><a href=\"#包装数组\" class=\"headerlink\" title=\"包装数组\"></a>包装数组</h3><p>创建一个名为 ArrayWrapper 的类，它在其构造函数中接受一个整数数组作为参数。该类应具有以下两个特性：<br>当使用 + 运算符将两个该类的实例相加时，结果值为两个数组中所有元素的总和。<br>当在实例上调用 String() 函数时，它将返回一个由逗号分隔的括在方括号中的字符串。例如，[1,2,3] 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ArrayWrapper</span> = <span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将传入的数组赋值给实例属性</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span> = nums;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"title class_\">ArrayWrapper</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">valueOf</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 计算数组中所有元素的和并返回</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">nums</span>.<span class=\"title function_\">reduce</span>(<span class=\"function\">(<span class=\"params\">sum, num</span>) =&gt;</span> sum + num, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">ArrayWrapper</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">toString</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将数组转换为字符串格式</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`[<span class=\"subst\">$&#123;<span class=\"variable language_\">this</span>.nums.join(<span class=\"string\">&#x27;,&#x27;</span>)&#125;</span>]`</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>模板字符串，${}引用表达式</font></li>\n<li><font color=red>使用 throw new Error(‘这是一个错误信息’) 抛出异常</font></li>\n</ul>\n<h3 id=\"执行可取消的延迟函数\"><a href=\"#执行可取消的延迟函数\" class=\"headerlink\" title=\"执行可取消的延迟函数\"></a>执行可取消的延迟函数</h3><p>给定一个函数 fn ，一个参数数组 args 和一个以毫秒为单位的超时时间 t ，返回一个取消函数 cancelFn 。<br>在 cancelTimeMs 的延迟后，返回的取消函数 cancelFn 将被调用。<br>setTimeout(cancelFn, cancelTimeMs)<br>最初，函数 fn 的执行应该延迟 t 毫秒。<br>如果在 t 毫秒的延迟之前调用了函数 cancelFn，它应该取消 fn 的延迟执行。否则，如果在指定的延迟 t 内没有调用 cancelFn，则应执行 fn，并使用提供的 args 作为参数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例 <span class=\"number\">1</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">输入：fn = <span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> x * <span class=\"number\">5</span>, args = [<span class=\"number\">2</span>], t = <span class=\"number\">20</span></span><br><span class=\"line\">输出：[&#123;<span class=\"string\">&quot;time&quot;</span>: <span class=\"number\">20</span>, <span class=\"string\">&quot;returned&quot;</span>: <span class=\"number\">10</span>&#125;]</span><br><span class=\"line\">解释：</span><br><span class=\"line\"><span class=\"keyword\">const</span> cancelTimeMs = <span class=\"number\">50</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> cancelFn = <span class=\"title function_\">cancellable</span>(<span class=\"function\">(<span class=\"params\">x</span>) =&gt;</span> x * <span class=\"number\">5</span>, [<span class=\"number\">2</span>], <span class=\"number\">20</span>);</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(cancelFn, cancelTimeMs);</span><br><span class=\"line\"></span><br><span class=\"line\">取消操作被安排在延迟了 cancelTimeMs（<span class=\"number\">50</span>毫秒）后进行，这发生在 <span class=\"title function_\">fn</span>(<span class=\"number\">2</span>) 在<span class=\"number\">20</span>毫秒时执行之后。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">Var</span> cancellable = <span class=\"keyword\">function</span>(<span class=\"params\">fn,args,t</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeoutID;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> cancelFn = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timeoutID);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timeoutID = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">()=&gt;</span>&#123;<span class=\"title function_\">fn</span>(args);&#125;,t);</span><br><span class=\"line\">    <span class=\"title class_\">Return</span> cancelFn;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>注意题目中对cancelFn的功能需求，第二个setTimout函数是在cancellable之外执行，本很熟只需要创建一个函数，调用能取消setTimeout的函数即可</font></li>\n</ul>\n<h3 id=\"排序方式\"><a href=\"#排序方式\" class=\"headerlink\" title=\"排序方式\"></a>排序方式</h3><p>给定一个数组 arr 和一个函数 fn，返回一个排序后的数组 sortedArr。你可以假设 fn 只返回数字，并且这些数字决定了 sortedArr 的排序顺序。sortedArr 必须按照 fn 的输出值 升序 排序。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> sortBy = <span class=\"keyword\">function</span>(<span class=\"params\">arr, fn</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sortedArr = arr.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span><span class=\"title function_\">fn</span>(a)-<span class=\"title function_\">fn</span>(b));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sortedArr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>.sort()方法可以接收一个比较函数，该函数接收两个参数，返回一个负数、零或正数，用来决定两个元素的相对顺序。<br>负数：第一个参数排在第二个参数前；<br>正数：第一个参数排在第二个参数后；<br>零：两个参数相等。</font></li>\n</ul>\n<h3 id=\"间隔取消（setTimeout重复调用）\"><a href=\"#间隔取消（setTimeout重复调用）\" class=\"headerlink\" title=\"间隔取消（setTimeout重复调用）\"></a>间隔取消（setTimeout重复调用）</h3><p>现给定一个函数 fn，一个参数数组 args 和一个时间间隔 t，返回一个取消函数 cancelFn。</p>\n<p>在经过 cancelTimeMs 毫秒的延迟后，将调用返回的取消函数 cancelFn。</p>\n<p>setTimeout(cancelFn, cancelTimeMs)<br>函数 fn 应立即使用参数 args 调用，然后每隔 t 毫秒调用一次，直到在 cancelTimeMs 毫秒时调用 cancelFn。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> cancellable = <span class=\"keyword\">function</span>(<span class=\"params\">fn, args, t</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timeoutID;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> status = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> cancleFn = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(timeoutID);</span><br><span class=\"line\">        status = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> repeatsetTime = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(status)&#123;<span class=\"comment\">//判断条件在函数内部进行循环</span></span><br><span class=\"line\">            <span class=\"title function_\">fn</span>(...args);<span class=\"comment\">//使用...args展开参数数组，fn接收任意数量的参数</span></span><br><span class=\"line\">            timeoutID = <span class=\"built_in\">setTimeout</span>(repeatsetTime,t);<span class=\"comment\">//每次都调用repeatsetTime，而非fn（...args）</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">fn</span>(...args);</span><br><span class=\"line\">    timeoutID = <span class=\"built_in\">setTimeout</span>(repeatsetTime,t);<span class=\"comment\">//启动第一次调用</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> cancleFn;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>也可以使用setInterval实现间隔调用，但是需要注意 clearInterval的使用</font></li>\n<li><font color=red>正确的幂运算 result &#x3D; Math.pow(a,x)</font></li>\n</ul>\n<h3 id=\"判断为空\"><a href=\"#判断为空\" class=\"headerlink\" title=\"判断为空\"></a>判断为空</h3><p>给定一个对象或数组，判断它是否为空。</p>\n<p>一个空对象不包含任何键值对。<br>一个空数组不包含任何元素。<br>你可以假设对象或数组是通过 JSON.parse 解析得到的。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> isEmpty = <span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(obj))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj.<span class=\"property\">length</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> obj === <span class=\"string\">&#x27;object&#x27;</span> &amp;&amp; obj !== <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(obj).<span class=\"property\">length</span> === <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><font color=red>typeof null &#x3D;&#x3D;&#x3D; ‘object’，所以需要判断null</font></li>\n<li><font color=red>Object.keys()返回一个数组，包含对象obj的键值;length属性返回数组的长度</font></li>\n</ul>"},{"title":"虚拟机搭建","date":"2022-09-12T14:14:30.000Z","_content":"初学搭建虚拟机环境，记录一下自己的自学过程，为之后自学路径优化提供参考。\n<!-- more -->\n### 在虚拟机软件中安装配置 Ubuntu 发行版\n#### 读懂陌生名词\n* 虚拟机：虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。在实体计算机中能够完成的工作在虚拟机中都能够实现。在计算机中创建虚拟机时，需要将实体机的部分硬盘和内存容量作为虚拟机的硬盘和内存容量。每个虚拟机都有独立的CMOS、硬盘和操作系统，可以像使用实体机一样对虚拟机进行操作。\n* Ubuntu：Ubuntu是一个以桌面应用为主的Linux操作系统。\n### 搜索教程，步步跟随\n浅安利一下这个教程，讲的特别清楚！\nhttps://blog.csdn.net/weixin_43290551/article/details/125954709\n### 下载虚拟机软件\n* 官网下载\nhttps://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion\n### 下载Ubuntu镜像文件\n* 下载ubuntu\nhttps://releases.ubuntu.com/\n### 创建虚拟机，在虚拟机中配置Linux环境\n* 跟着教程一步一步地安装虚拟机，配置环境。\n* 根据教程与下载提示步步进行\n* 注意在自定义硬盘中完成CD的配置\n* 完成下载，在开机中断开网络适配器连接\n* 完成虚拟机基础设置（语言、时区、用户名、密码……）\n* 重启\n\n## 通过 VScode 的 Remote 插件连接至你的虚拟机\n### 找教程\nhttps://blog.csdn.net/weixin_44260459/article/details/123205034\nhttps://blog.csdn.net/weixin_44260459/article/details/121772911?spm=1001.2101.3001.6650.1\n\n## 心得体会\n在学习一个全新操作时或者下载软件时，先了解这个东西是什么（虽然不一定看得懂），再进一步的搜索教程，沿着一份情况与自己相似的教程前进。当遇到难点卡住时，弄清问题本质：这一步是在配置ssh，还是查找ip地址，然后，再搜索本质问题寻找答案。这样的搜索过程效率更高。\n另外，养成记录的习惯，不要事后因为要交截图才去重新截图。git的存在价值是项目管理，同理，步步截屏，写markdown文档的过程也是在项目管理。记录下来，下一次遇到相同问题才会有解决思路，遇到不同问题，也能学会怎么解决。","source":"_posts/虚拟机搭建.md","raw":"---\ntitle: 虚拟机搭建\ndate: 2022-9-12 22:14:30\ntags: 虚拟机\ncategories: 编程学习\n---\n初学搭建虚拟机环境，记录一下自己的自学过程，为之后自学路径优化提供参考。\n<!-- more -->\n### 在虚拟机软件中安装配置 Ubuntu 发行版\n#### 读懂陌生名词\n* 虚拟机：虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。在实体计算机中能够完成的工作在虚拟机中都能够实现。在计算机中创建虚拟机时，需要将实体机的部分硬盘和内存容量作为虚拟机的硬盘和内存容量。每个虚拟机都有独立的CMOS、硬盘和操作系统，可以像使用实体机一样对虚拟机进行操作。\n* Ubuntu：Ubuntu是一个以桌面应用为主的Linux操作系统。\n### 搜索教程，步步跟随\n浅安利一下这个教程，讲的特别清楚！\nhttps://blog.csdn.net/weixin_43290551/article/details/125954709\n### 下载虚拟机软件\n* 官网下载\nhttps://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion\n### 下载Ubuntu镜像文件\n* 下载ubuntu\nhttps://releases.ubuntu.com/\n### 创建虚拟机，在虚拟机中配置Linux环境\n* 跟着教程一步一步地安装虚拟机，配置环境。\n* 根据教程与下载提示步步进行\n* 注意在自定义硬盘中完成CD的配置\n* 完成下载，在开机中断开网络适配器连接\n* 完成虚拟机基础设置（语言、时区、用户名、密码……）\n* 重启\n\n## 通过 VScode 的 Remote 插件连接至你的虚拟机\n### 找教程\nhttps://blog.csdn.net/weixin_44260459/article/details/123205034\nhttps://blog.csdn.net/weixin_44260459/article/details/121772911?spm=1001.2101.3001.6650.1\n\n## 心得体会\n在学习一个全新操作时或者下载软件时，先了解这个东西是什么（虽然不一定看得懂），再进一步的搜索教程，沿着一份情况与自己相似的教程前进。当遇到难点卡住时，弄清问题本质：这一步是在配置ssh，还是查找ip地址，然后，再搜索本质问题寻找答案。这样的搜索过程效率更高。\n另外，养成记录的习惯，不要事后因为要交截图才去重新截图。git的存在价值是项目管理，同理，步步截屏，写markdown文档的过程也是在项目管理。记录下来，下一次遇到相同问题才会有解决思路，遇到不同问题，也能学会怎么解决。","slug":"虚拟机搭建","published":1,"updated":"2024-10-29T10:36:19.504Z","comments":1,"layout":"post","photos":[],"_id":"cm2ubvqny0009f8v8afle98eq","content":"<p>初学搭建虚拟机环境，记录一下自己的自学过程，为之后自学路径优化提供参考。</p>\n<span id=\"more\"></span>\n<h3 id=\"在虚拟机软件中安装配置-Ubuntu-发行版\"><a href=\"#在虚拟机软件中安装配置-Ubuntu-发行版\" class=\"headerlink\" title=\"在虚拟机软件中安装配置 Ubuntu 发行版\"></a>在虚拟机软件中安装配置 Ubuntu 发行版</h3><h4 id=\"读懂陌生名词\"><a href=\"#读懂陌生名词\" class=\"headerlink\" title=\"读懂陌生名词\"></a>读懂陌生名词</h4><ul>\n<li>虚拟机：虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。在实体计算机中能够完成的工作在虚拟机中都能够实现。在计算机中创建虚拟机时，需要将实体机的部分硬盘和内存容量作为虚拟机的硬盘和内存容量。每个虚拟机都有独立的CMOS、硬盘和操作系统，可以像使用实体机一样对虚拟机进行操作。</li>\n<li>Ubuntu：Ubuntu是一个以桌面应用为主的Linux操作系统。</li>\n</ul>\n<h3 id=\"搜索教程，步步跟随\"><a href=\"#搜索教程，步步跟随\" class=\"headerlink\" title=\"搜索教程，步步跟随\"></a>搜索教程，步步跟随</h3><p>浅安利一下这个教程，讲的特别清楚！<br><a href=\"https://blog.csdn.net/weixin_43290551/article/details/125954709\">https://blog.csdn.net/weixin_43290551/article/details/125954709</a></p>\n<h3 id=\"下载虚拟机软件\"><a href=\"#下载虚拟机软件\" class=\"headerlink\" title=\"下载虚拟机软件\"></a>下载虚拟机软件</h3><ul>\n<li>官网下载<br><a href=\"https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion\">https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion</a></li>\n</ul>\n<h3 id=\"下载Ubuntu镜像文件\"><a href=\"#下载Ubuntu镜像文件\" class=\"headerlink\" title=\"下载Ubuntu镜像文件\"></a>下载Ubuntu镜像文件</h3><ul>\n<li>下载ubuntu<br><a href=\"https://releases.ubuntu.com/\">https://releases.ubuntu.com/</a></li>\n</ul>\n<h3 id=\"创建虚拟机，在虚拟机中配置Linux环境\"><a href=\"#创建虚拟机，在虚拟机中配置Linux环境\" class=\"headerlink\" title=\"创建虚拟机，在虚拟机中配置Linux环境\"></a>创建虚拟机，在虚拟机中配置Linux环境</h3><ul>\n<li>跟着教程一步一步地安装虚拟机，配置环境。</li>\n<li>根据教程与下载提示步步进行</li>\n<li>注意在自定义硬盘中完成CD的配置</li>\n<li>完成下载，在开机中断开网络适配器连接</li>\n<li>完成虚拟机基础设置（语言、时区、用户名、密码……）</li>\n<li>重启</li>\n</ul>\n<h2 id=\"通过-VScode-的-Remote-插件连接至你的虚拟机\"><a href=\"#通过-VScode-的-Remote-插件连接至你的虚拟机\" class=\"headerlink\" title=\"通过 VScode 的 Remote 插件连接至你的虚拟机\"></a>通过 VScode 的 Remote 插件连接至你的虚拟机</h2><h3 id=\"找教程\"><a href=\"#找教程\" class=\"headerlink\" title=\"找教程\"></a>找教程</h3><p><a href=\"https://blog.csdn.net/weixin_44260459/article/details/123205034\">https://blog.csdn.net/weixin_44260459/article/details/123205034</a><br><a href=\"https://blog.csdn.net/weixin_44260459/article/details/121772911?spm=1001.2101.3001.6650.1\">https://blog.csdn.net/weixin_44260459/article/details/121772911?spm=1001.2101.3001.6650.1</a></p>\n<h2 id=\"心得体会\"><a href=\"#心得体会\" class=\"headerlink\" title=\"心得体会\"></a>心得体会</h2><p>在学习一个全新操作时或者下载软件时，先了解这个东西是什么（虽然不一定看得懂），再进一步的搜索教程，沿着一份情况与自己相似的教程前进。当遇到难点卡住时，弄清问题本质：这一步是在配置ssh，还是查找ip地址，然后，再搜索本质问题寻找答案。这样的搜索过程效率更高。<br>另外，养成记录的习惯，不要事后因为要交截图才去重新截图。git的存在价值是项目管理，同理，步步截屏，写markdown文档的过程也是在项目管理。记录下来，下一次遇到相同问题才会有解决思路，遇到不同问题，也能学会怎么解决。</p>\n","excerpt":"<p>初学搭建虚拟机环境，记录一下自己的自学过程，为之后自学路径优化提供参考。</p>","more":"<h3 id=\"在虚拟机软件中安装配置-Ubuntu-发行版\"><a href=\"#在虚拟机软件中安装配置-Ubuntu-发行版\" class=\"headerlink\" title=\"在虚拟机软件中安装配置 Ubuntu 发行版\"></a>在虚拟机软件中安装配置 Ubuntu 发行版</h3><h4 id=\"读懂陌生名词\"><a href=\"#读懂陌生名词\" class=\"headerlink\" title=\"读懂陌生名词\"></a>读懂陌生名词</h4><ul>\n<li>虚拟机：虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。在实体计算机中能够完成的工作在虚拟机中都能够实现。在计算机中创建虚拟机时，需要将实体机的部分硬盘和内存容量作为虚拟机的硬盘和内存容量。每个虚拟机都有独立的CMOS、硬盘和操作系统，可以像使用实体机一样对虚拟机进行操作。</li>\n<li>Ubuntu：Ubuntu是一个以桌面应用为主的Linux操作系统。</li>\n</ul>\n<h3 id=\"搜索教程，步步跟随\"><a href=\"#搜索教程，步步跟随\" class=\"headerlink\" title=\"搜索教程，步步跟随\"></a>搜索教程，步步跟随</h3><p>浅安利一下这个教程，讲的特别清楚！<br><a href=\"https://blog.csdn.net/weixin_43290551/article/details/125954709\">https://blog.csdn.net/weixin_43290551/article/details/125954709</a></p>\n<h3 id=\"下载虚拟机软件\"><a href=\"#下载虚拟机软件\" class=\"headerlink\" title=\"下载虚拟机软件\"></a>下载虚拟机软件</h3><ul>\n<li>官网下载<br><a href=\"https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion\">https://www.vmware.com/products/desktop-hypervisor/workstation-and-fusion</a></li>\n</ul>\n<h3 id=\"下载Ubuntu镜像文件\"><a href=\"#下载Ubuntu镜像文件\" class=\"headerlink\" title=\"下载Ubuntu镜像文件\"></a>下载Ubuntu镜像文件</h3><ul>\n<li>下载ubuntu<br><a href=\"https://releases.ubuntu.com/\">https://releases.ubuntu.com/</a></li>\n</ul>\n<h3 id=\"创建虚拟机，在虚拟机中配置Linux环境\"><a href=\"#创建虚拟机，在虚拟机中配置Linux环境\" class=\"headerlink\" title=\"创建虚拟机，在虚拟机中配置Linux环境\"></a>创建虚拟机，在虚拟机中配置Linux环境</h3><ul>\n<li>跟着教程一步一步地安装虚拟机，配置环境。</li>\n<li>根据教程与下载提示步步进行</li>\n<li>注意在自定义硬盘中完成CD的配置</li>\n<li>完成下载，在开机中断开网络适配器连接</li>\n<li>完成虚拟机基础设置（语言、时区、用户名、密码……）</li>\n<li>重启</li>\n</ul>\n<h2 id=\"通过-VScode-的-Remote-插件连接至你的虚拟机\"><a href=\"#通过-VScode-的-Remote-插件连接至你的虚拟机\" class=\"headerlink\" title=\"通过 VScode 的 Remote 插件连接至你的虚拟机\"></a>通过 VScode 的 Remote 插件连接至你的虚拟机</h2><h3 id=\"找教程\"><a href=\"#找教程\" class=\"headerlink\" title=\"找教程\"></a>找教程</h3><p><a href=\"https://blog.csdn.net/weixin_44260459/article/details/123205034\">https://blog.csdn.net/weixin_44260459/article/details/123205034</a><br><a href=\"https://blog.csdn.net/weixin_44260459/article/details/121772911?spm=1001.2101.3001.6650.1\">https://blog.csdn.net/weixin_44260459/article/details/121772911?spm=1001.2101.3001.6650.1</a></p>\n<h2 id=\"心得体会\"><a href=\"#心得体会\" class=\"headerlink\" title=\"心得体会\"></a>心得体会</h2><p>在学习一个全新操作时或者下载软件时，先了解这个东西是什么（虽然不一定看得懂），再进一步的搜索教程，沿着一份情况与自己相似的教程前进。当遇到难点卡住时，弄清问题本质：这一步是在配置ssh，还是查找ip地址，然后，再搜索本质问题寻找答案。这样的搜索过程效率更高。<br>另外，养成记录的习惯，不要事后因为要交截图才去重新截图。git的存在价值是项目管理，同理，步步截屏，写markdown文档的过程也是在项目管理。记录下来，下一次遇到相同问题才会有解决思路，遇到不同问题，也能学会怎么解决。</p>"},{"title":"git&markdown学习记录（一）","date":"2022-09-09T09:35:03.000Z","_content":"大一刚入学，在学校焦糖工作室招新马拉松中，写下的第一篇markdown学习笔记。由于系统设置问题，并未成功完成git与GitHub建立远程链接，但是，从中积累通过markdown写作，并复盘操作，在诸多bug中找到解决路径的经验。\n<!-- more -->\n## 安装git \n安装git是我遇见的第一个槛，打得开官网却打不开下载页面。我尝试以下方法解决：\n### 1、换个浏览器\n虽然现在想起来这个办法有点傻，但也不失为一种思路，而且在科普题目一中，就提到了不同的搜索引擎。所以，我舍弃了Microsoft Edge，短暂投入chorme怀抱。可事实告诉我，浏览器不是原罪。\n### 2、翻墙\n翻墙是我的室友从9月6日一早就在做，做了一大半天的事儿。所以，我不用搜索，我就知道，翻墙能解决问题。However,翻墙教程千千万，翻墙路径真麻烦，更何况，翻墙违法。Then，~~怕网警~~（怕麻烦且贫穷）的我，收回了翻墙的心。（但是如果后续还要使用像GitHub这样的外网，翻墙可能才是最简单的通法吧）\n### 3、发现核心问题：打开GitHub网站\n直接搜索git下载，似乎没有多的解决方案了。However，观察我无法打开的下载页面，页面标签上赫然写着一个熟悉的名字——GitHub。所以，再次搜索打开GitHub，解决方法多了起来。\n## 快速打开GitHub\n网上的途径千千万，真正能用的才是好方法。原来不是我打不开这个网站，只是他的响应速度太慢了。\n### 1、修改host\n这是知乎上找到的方法，大概途径是，先用IP地址查找网页，查找GitHub网站的IP地址，然后在Windows>System32>drivers>etc>hosts中把查到的IP地址用一定格式搞上去，然后再通过cmd刷新DNS解决问题。\n\n想法很不错，可我没有更改C盘此文件的权限。这时，我想起假期看C语言网课时，老师提到的软件——notepad++。当时使用是为了有权限修改VS的源文件，使scanf函数不报错。（我懒，所以当时采用了弹幕的方法，先另存为到桌面，保存后再重新将文件拖回原位置替换）\n\n先用另存为法更改hosts文件，好家伙，用记事本方式打开，另存为后也变成了txt文件。\n\n再下notepad++，官网也是外网，打不开。于是在CSDN上找到了大佬分享的网盘文件，快乐下载。\n\n当我志得意满的完成了此方法的所有步骤后，GitHub还是打不开。🙂真好。。。\n### 2、加速器\n知乎靠不住，B站大学应该能顶了吧？\n#### dev-sidecar\n跟着标题党学教程，《如何快速打开GitHub网站？30秒教你快速解决》。确实，他用了30s解决问题，但是，我要先打开gitee网站，注册，搜索，下载加速器……ok,fine,当我一步一步照做之后，我发现我居然搞不懂他是怎么一下子就下载下来的？！\n\n在哪里跌倒就要在哪里躺下，我选择换一个教程。\n\n#### steam++\n换一个加速器，就好多了。在UP推荐的两个兼职加速器UU加速器和steam++里，我果断选择了可能被拦截的steam++，~~名字好听~~，不用天天更新，界面清爽，操作简便🙂。打开加速器，GitHub正确访问！！！\n## 注册GitHub，安装git 2，创建版本库\n在打开加速器的情况下，一切都是那么水到渠成。\n\n## 学习markdown文件的创建及书写\n在git教程里有这样一句话：“建议你下载Visual Studio Code代替记事本。”哇哦~原来，我的下载VS时顺手下载的VScode是这么用的。原谅我迫不及待的开始学习VScode markdown的用法，同时也试验git管理。\n\n这第一篇学习记录，也就是我的VScode markdown试验结果。\n## 使用git管理markdown文件\n在反复试探怎么使用GitHub搭建图床的过程中，我终于意识到，我的repositories并没有配置成功。在执行'git remote add origin'后，git无报错。下一步，git push却会反复报错：error:src refspec main dode not match any\nerror:failed to push some refs to github.com:Cynthia1379/jotang.git\n\n### 1、检验操作步骤问题\n我学习删去了原来的“焦糖招新”repository，和本地隐藏的git文件，严格按照教程，重新操作。虽然与教程上GitHub的操作界面有些不同，但也确认了大的步骤没有问题，问题出现在一些细节上。\n\n### 2、解决“fail to push\"报错\n在CSDN论坛中，找到了相同报错的解决方案，输入“git pull origin master”进行同步。然后，又出现了新的报错。秉承着刨根问底的精神，继续搜索新的报错：“Could not read from remote repository\"\"please make sure you have the correct access rights and the repository exists\"\n\n得到的解答如下：原因一，git仓库的用户信息和本地的用户信息不匹配；原因二，客户端与服务端未生成 ssh key；原因三，客户端与服务端的ssh key不匹配；原因四，本地的hosts文件中没有配置IP地址和主机名的映射关系导致本地DNS无法解析出现该问题。\n\n 原因一，将仓库用户名改为本地用户名。改后再次尝试，失败。\n\n 原因二三，讲道理，我觉得不应该是这两个原因，然而由于提供的解决步骤（重新生成ssh密匙）中，加入了新的步骤，将SSH key添加到ssh-agent，我还是浅浅的试了一下，用'ssh -T git@github.com'检验，弹出语句与成功界面不符。\n\n 原因四，发帖人对此方法的描述模糊不清。反复搜索后，未果。\n\n### 3、解决”Please make sure you have the correct access rights\"\n在删除了.ssh文件下known_hosts后，再重新连接SSH密匙。别人输入“ssh -T git@github.com”后输入yes回车，问题解决。我完成操作后git错乱，跳出一长串y，光标不停左右横条。🙂，小问题。\n\n### 4、观察，陷入僵局\n当我和git的博弈陷入僵局之后，我又再次重复了一遍我能找到的解决步骤。发现了一些隐藏的问题：诸如由于多次重复操作，git连接的repository还是之前被删了的那一个。\n\n### 5、写markdown整理思路，找到盲点\n在卡住之后，想到可以先把问题记录下来，写markdown梳理思路。以下是发现的问题：\n\n1、在查找资料时，思维太散。为解决问题一，往往只打开一个网页，发现问题2就立刻往下思考，对问题1反而没有进行深挖；\n\n2、在查找资料时，没有逻辑。直接忘记或者忽略了最开始还有另外一个报错。''error:failed to push some refs to github.com:Cynthia1379/jotang.git''\n\n3、没有及时整理，在写markdown时狼狈的翻找浏览器历史记录来梳理思路，浪费了大量时间。\n\n4、（补充）在查找解决方法时，只按部就班解决问题，没有了解每个语句的含义和本质。\n\n解决方案：最简单的，做任务先建markdown，先梳理记录，再往后执行操作。\n\n### 6、解决最初的另一个报错\n1、发现有可能是因为本地仓库分支和GitHub仓库分支名称不同。给本地git仓库更改分支名称后，仍然不行。\n\n2、可能因为git本地仓库是空仓库，再次提交文件确认仓库非空后，还是不可以。报错相同。\n\n3.仍然可能是分支问题：没有发现main分支，需要先切换到main分支。先commit，再branch，然后checkout，最后，git push 的时候报错变了😀，变成了“Could not read from remote repository\"“please make sure you have the correct access rights and the repository exists\"🙂\n\n### 7、回到问题3\\又一次找到核心问题\n重新仔细阅读了一些解决方法之后，我get到了ssh -T git@github.com语句的含义——配置ssh，在此基础上，我又一次找到了问题的核心：kex_exchange_identification: Connection closed by remote host. Connection closed by……\n\n### 8、搜索核心问题，推进解法\n1、在查找”kex-exchange……“语句时，我从CSDN跳转至StackOverflow找到了解法，采用sshd -t debug，然后出现新的语句sshd:no hostkeys available -- exiting\n\n2、解决ssh启动错误：根据网上的解决方法，先输入ssh-keygen -A，再输入/etc/init.d/ssh start，中间发现问题，找不到对应文件，然后再根据指令一下达后的反馈文字，找到本电脑中的文件地址”/etc/ssh“，成功完成指令，再运行”ssh -t\"似乎也不再出现问题。然而，在尝试git push -u……时，还是不可以🙂\n\n3、回到上一级问题kex-exchange……，按网上方法用ssh -v <username>@<password>来debug，然后，出现了问题bash:syntax error near unexpected token 'newline'，再次搜索，发现不能使用尖括号输入ssh -v 语句，去掉尖括号后重试，得到debuge1：reading configuration data /etc/ssh/ssh_config  Could not resolve hostname password\n\n4.继续查找问题。发现此时网络中的解决方案要么是已经尝试过的，要么语义不明，指代不清，要么货不对板，没有参考价值。\n\n### 9、暂时放弃😭\n至此，我选择暂时放弃GitHub，尝试使用gitee，毕竟，PS和XD的试用期不等人，马拉松的期限也不等人😭\n\n### 10、再次尝试\n作为一个ddl人，在10月13日听说我的舍友们把GitHub都配置成功了，我，emm。。。ddl人绝不认输！\n\n1.再次搜索教程，卸载后重新下载git；\n\n2.进入GitHub，重新配置ssh keys；\n\n3.新建远程与本地仓库；\n\n4.向本地仓库提交文件；\n\n5.卡在了提交这一步，报错内容大意为无法连接到远程仓库。\n无法连接的原因：无法读取远程仓库，连接被端口关闭。。。\n\n6.我又又又找到了新的可能的失败原因：端口占用问题。打开cmd，查询端口，找到占用软件，尝试停用。🙂，占用22号端口的软件是steam++呢，尝试关闭端口也无法关闭，直接关闭steam++，端口无占用软件，但是GitHub都无法打开🙂。\n我浅问了我的室友采用的解决方案：一个是直接VPN翻墙，一个是连接手机热点就能流畅登录github。\n\n7.我谢谢你，GitHub🙂\n","source":"_posts/远程仓库链接.md","raw":"---\ntitle: \"git&markdown学习记录（一）\"\ndate: 2022-9-09 17:35:03\ntags:\n  - Git\ncategories:\n  - 编程学习\n---\n大一刚入学，在学校焦糖工作室招新马拉松中，写下的第一篇markdown学习笔记。由于系统设置问题，并未成功完成git与GitHub建立远程链接，但是，从中积累通过markdown写作，并复盘操作，在诸多bug中找到解决路径的经验。\n<!-- more -->\n## 安装git \n安装git是我遇见的第一个槛，打得开官网却打不开下载页面。我尝试以下方法解决：\n### 1、换个浏览器\n虽然现在想起来这个办法有点傻，但也不失为一种思路，而且在科普题目一中，就提到了不同的搜索引擎。所以，我舍弃了Microsoft Edge，短暂投入chorme怀抱。可事实告诉我，浏览器不是原罪。\n### 2、翻墙\n翻墙是我的室友从9月6日一早就在做，做了一大半天的事儿。所以，我不用搜索，我就知道，翻墙能解决问题。However,翻墙教程千千万，翻墙路径真麻烦，更何况，翻墙违法。Then，~~怕网警~~（怕麻烦且贫穷）的我，收回了翻墙的心。（但是如果后续还要使用像GitHub这样的外网，翻墙可能才是最简单的通法吧）\n### 3、发现核心问题：打开GitHub网站\n直接搜索git下载，似乎没有多的解决方案了。However，观察我无法打开的下载页面，页面标签上赫然写着一个熟悉的名字——GitHub。所以，再次搜索打开GitHub，解决方法多了起来。\n## 快速打开GitHub\n网上的途径千千万，真正能用的才是好方法。原来不是我打不开这个网站，只是他的响应速度太慢了。\n### 1、修改host\n这是知乎上找到的方法，大概途径是，先用IP地址查找网页，查找GitHub网站的IP地址，然后在Windows>System32>drivers>etc>hosts中把查到的IP地址用一定格式搞上去，然后再通过cmd刷新DNS解决问题。\n\n想法很不错，可我没有更改C盘此文件的权限。这时，我想起假期看C语言网课时，老师提到的软件——notepad++。当时使用是为了有权限修改VS的源文件，使scanf函数不报错。（我懒，所以当时采用了弹幕的方法，先另存为到桌面，保存后再重新将文件拖回原位置替换）\n\n先用另存为法更改hosts文件，好家伙，用记事本方式打开，另存为后也变成了txt文件。\n\n再下notepad++，官网也是外网，打不开。于是在CSDN上找到了大佬分享的网盘文件，快乐下载。\n\n当我志得意满的完成了此方法的所有步骤后，GitHub还是打不开。🙂真好。。。\n### 2、加速器\n知乎靠不住，B站大学应该能顶了吧？\n#### dev-sidecar\n跟着标题党学教程，《如何快速打开GitHub网站？30秒教你快速解决》。确实，他用了30s解决问题，但是，我要先打开gitee网站，注册，搜索，下载加速器……ok,fine,当我一步一步照做之后，我发现我居然搞不懂他是怎么一下子就下载下来的？！\n\n在哪里跌倒就要在哪里躺下，我选择换一个教程。\n\n#### steam++\n换一个加速器，就好多了。在UP推荐的两个兼职加速器UU加速器和steam++里，我果断选择了可能被拦截的steam++，~~名字好听~~，不用天天更新，界面清爽，操作简便🙂。打开加速器，GitHub正确访问！！！\n## 注册GitHub，安装git 2，创建版本库\n在打开加速器的情况下，一切都是那么水到渠成。\n\n## 学习markdown文件的创建及书写\n在git教程里有这样一句话：“建议你下载Visual Studio Code代替记事本。”哇哦~原来，我的下载VS时顺手下载的VScode是这么用的。原谅我迫不及待的开始学习VScode markdown的用法，同时也试验git管理。\n\n这第一篇学习记录，也就是我的VScode markdown试验结果。\n## 使用git管理markdown文件\n在反复试探怎么使用GitHub搭建图床的过程中，我终于意识到，我的repositories并没有配置成功。在执行'git remote add origin'后，git无报错。下一步，git push却会反复报错：error:src refspec main dode not match any\nerror:failed to push some refs to github.com:Cynthia1379/jotang.git\n\n### 1、检验操作步骤问题\n我学习删去了原来的“焦糖招新”repository，和本地隐藏的git文件，严格按照教程，重新操作。虽然与教程上GitHub的操作界面有些不同，但也确认了大的步骤没有问题，问题出现在一些细节上。\n\n### 2、解决“fail to push\"报错\n在CSDN论坛中，找到了相同报错的解决方案，输入“git pull origin master”进行同步。然后，又出现了新的报错。秉承着刨根问底的精神，继续搜索新的报错：“Could not read from remote repository\"\"please make sure you have the correct access rights and the repository exists\"\n\n得到的解答如下：原因一，git仓库的用户信息和本地的用户信息不匹配；原因二，客户端与服务端未生成 ssh key；原因三，客户端与服务端的ssh key不匹配；原因四，本地的hosts文件中没有配置IP地址和主机名的映射关系导致本地DNS无法解析出现该问题。\n\n 原因一，将仓库用户名改为本地用户名。改后再次尝试，失败。\n\n 原因二三，讲道理，我觉得不应该是这两个原因，然而由于提供的解决步骤（重新生成ssh密匙）中，加入了新的步骤，将SSH key添加到ssh-agent，我还是浅浅的试了一下，用'ssh -T git@github.com'检验，弹出语句与成功界面不符。\n\n 原因四，发帖人对此方法的描述模糊不清。反复搜索后，未果。\n\n### 3、解决”Please make sure you have the correct access rights\"\n在删除了.ssh文件下known_hosts后，再重新连接SSH密匙。别人输入“ssh -T git@github.com”后输入yes回车，问题解决。我完成操作后git错乱，跳出一长串y，光标不停左右横条。🙂，小问题。\n\n### 4、观察，陷入僵局\n当我和git的博弈陷入僵局之后，我又再次重复了一遍我能找到的解决步骤。发现了一些隐藏的问题：诸如由于多次重复操作，git连接的repository还是之前被删了的那一个。\n\n### 5、写markdown整理思路，找到盲点\n在卡住之后，想到可以先把问题记录下来，写markdown梳理思路。以下是发现的问题：\n\n1、在查找资料时，思维太散。为解决问题一，往往只打开一个网页，发现问题2就立刻往下思考，对问题1反而没有进行深挖；\n\n2、在查找资料时，没有逻辑。直接忘记或者忽略了最开始还有另外一个报错。''error:failed to push some refs to github.com:Cynthia1379/jotang.git''\n\n3、没有及时整理，在写markdown时狼狈的翻找浏览器历史记录来梳理思路，浪费了大量时间。\n\n4、（补充）在查找解决方法时，只按部就班解决问题，没有了解每个语句的含义和本质。\n\n解决方案：最简单的，做任务先建markdown，先梳理记录，再往后执行操作。\n\n### 6、解决最初的另一个报错\n1、发现有可能是因为本地仓库分支和GitHub仓库分支名称不同。给本地git仓库更改分支名称后，仍然不行。\n\n2、可能因为git本地仓库是空仓库，再次提交文件确认仓库非空后，还是不可以。报错相同。\n\n3.仍然可能是分支问题：没有发现main分支，需要先切换到main分支。先commit，再branch，然后checkout，最后，git push 的时候报错变了😀，变成了“Could not read from remote repository\"“please make sure you have the correct access rights and the repository exists\"🙂\n\n### 7、回到问题3\\又一次找到核心问题\n重新仔细阅读了一些解决方法之后，我get到了ssh -T git@github.com语句的含义——配置ssh，在此基础上，我又一次找到了问题的核心：kex_exchange_identification: Connection closed by remote host. Connection closed by……\n\n### 8、搜索核心问题，推进解法\n1、在查找”kex-exchange……“语句时，我从CSDN跳转至StackOverflow找到了解法，采用sshd -t debug，然后出现新的语句sshd:no hostkeys available -- exiting\n\n2、解决ssh启动错误：根据网上的解决方法，先输入ssh-keygen -A，再输入/etc/init.d/ssh start，中间发现问题，找不到对应文件，然后再根据指令一下达后的反馈文字，找到本电脑中的文件地址”/etc/ssh“，成功完成指令，再运行”ssh -t\"似乎也不再出现问题。然而，在尝试git push -u……时，还是不可以🙂\n\n3、回到上一级问题kex-exchange……，按网上方法用ssh -v <username>@<password>来debug，然后，出现了问题bash:syntax error near unexpected token 'newline'，再次搜索，发现不能使用尖括号输入ssh -v 语句，去掉尖括号后重试，得到debuge1：reading configuration data /etc/ssh/ssh_config  Could not resolve hostname password\n\n4.继续查找问题。发现此时网络中的解决方案要么是已经尝试过的，要么语义不明，指代不清，要么货不对板，没有参考价值。\n\n### 9、暂时放弃😭\n至此，我选择暂时放弃GitHub，尝试使用gitee，毕竟，PS和XD的试用期不等人，马拉松的期限也不等人😭\n\n### 10、再次尝试\n作为一个ddl人，在10月13日听说我的舍友们把GitHub都配置成功了，我，emm。。。ddl人绝不认输！\n\n1.再次搜索教程，卸载后重新下载git；\n\n2.进入GitHub，重新配置ssh keys；\n\n3.新建远程与本地仓库；\n\n4.向本地仓库提交文件；\n\n5.卡在了提交这一步，报错内容大意为无法连接到远程仓库。\n无法连接的原因：无法读取远程仓库，连接被端口关闭。。。\n\n6.我又又又找到了新的可能的失败原因：端口占用问题。打开cmd，查询端口，找到占用软件，尝试停用。🙂，占用22号端口的软件是steam++呢，尝试关闭端口也无法关闭，直接关闭steam++，端口无占用软件，但是GitHub都无法打开🙂。\n我浅问了我的室友采用的解决方案：一个是直接VPN翻墙，一个是连接手机热点就能流畅登录github。\n\n7.我谢谢你，GitHub🙂\n","slug":"远程仓库链接","published":1,"updated":"2024-10-29T10:36:19.505Z","comments":1,"layout":"post","photos":[],"_id":"cm2ubvqnz000cf8v89tzn8ubx","content":"<p>大一刚入学，在学校焦糖工作室招新马拉松中，写下的第一篇markdown学习笔记。由于系统设置问题，并未成功完成git与GitHub建立远程链接，但是，从中积累通过markdown写作，并复盘操作，在诸多bug中找到解决路径的经验。</p>\n<span id=\"more\"></span>\n<h2 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h2><p>安装git是我遇见的第一个槛，打得开官网却打不开下载页面。我尝试以下方法解决：</p>\n<h3 id=\"1、换个浏览器\"><a href=\"#1、换个浏览器\" class=\"headerlink\" title=\"1、换个浏览器\"></a>1、换个浏览器</h3><p>虽然现在想起来这个办法有点傻，但也不失为一种思路，而且在科普题目一中，就提到了不同的搜索引擎。所以，我舍弃了Microsoft Edge，短暂投入chorme怀抱。可事实告诉我，浏览器不是原罪。</p>\n<h3 id=\"2、翻墙\"><a href=\"#2、翻墙\" class=\"headerlink\" title=\"2、翻墙\"></a>2、翻墙</h3><p>翻墙是我的室友从9月6日一早就在做，做了一大半天的事儿。所以，我不用搜索，我就知道，翻墙能解决问题。However,翻墙教程千千万，翻墙路径真麻烦，更何况，翻墙违法。Then，<del>怕网警</del>（怕麻烦且贫穷）的我，收回了翻墙的心。（但是如果后续还要使用像GitHub这样的外网，翻墙可能才是最简单的通法吧）</p>\n<h3 id=\"3、发现核心问题：打开GitHub网站\"><a href=\"#3、发现核心问题：打开GitHub网站\" class=\"headerlink\" title=\"3、发现核心问题：打开GitHub网站\"></a>3、发现核心问题：打开GitHub网站</h3><p>直接搜索git下载，似乎没有多的解决方案了。However，观察我无法打开的下载页面，页面标签上赫然写着一个熟悉的名字——GitHub。所以，再次搜索打开GitHub，解决方法多了起来。</p>\n<h2 id=\"快速打开GitHub\"><a href=\"#快速打开GitHub\" class=\"headerlink\" title=\"快速打开GitHub\"></a>快速打开GitHub</h2><p>网上的途径千千万，真正能用的才是好方法。原来不是我打不开这个网站，只是他的响应速度太慢了。</p>\n<h3 id=\"1、修改host\"><a href=\"#1、修改host\" class=\"headerlink\" title=\"1、修改host\"></a>1、修改host</h3><p>这是知乎上找到的方法，大概途径是，先用IP地址查找网页，查找GitHub网站的IP地址，然后在Windows&gt;System32&gt;drivers&gt;etc&gt;hosts中把查到的IP地址用一定格式搞上去，然后再通过cmd刷新DNS解决问题。</p>\n<p>想法很不错，可我没有更改C盘此文件的权限。这时，我想起假期看C语言网课时，老师提到的软件——notepad++。当时使用是为了有权限修改VS的源文件，使scanf函数不报错。（我懒，所以当时采用了弹幕的方法，先另存为到桌面，保存后再重新将文件拖回原位置替换）</p>\n<p>先用另存为法更改hosts文件，好家伙，用记事本方式打开，另存为后也变成了txt文件。</p>\n<p>再下notepad++，官网也是外网，打不开。于是在CSDN上找到了大佬分享的网盘文件，快乐下载。</p>\n<p>当我志得意满的完成了此方法的所有步骤后，GitHub还是打不开。🙂真好。。。</p>\n<h3 id=\"2、加速器\"><a href=\"#2、加速器\" class=\"headerlink\" title=\"2、加速器\"></a>2、加速器</h3><p>知乎靠不住，B站大学应该能顶了吧？</p>\n<h4 id=\"dev-sidecar\"><a href=\"#dev-sidecar\" class=\"headerlink\" title=\"dev-sidecar\"></a>dev-sidecar</h4><p>跟着标题党学教程，《如何快速打开GitHub网站？30秒教你快速解决》。确实，他用了30s解决问题，但是，我要先打开gitee网站，注册，搜索，下载加速器……ok,fine,当我一步一步照做之后，我发现我居然搞不懂他是怎么一下子就下载下来的？！</p>\n<p>在哪里跌倒就要在哪里躺下，我选择换一个教程。</p>\n<h4 id=\"steam\"><a href=\"#steam\" class=\"headerlink\" title=\"steam++\"></a>steam++</h4><p>换一个加速器，就好多了。在UP推荐的两个兼职加速器UU加速器和steam++里，我果断选择了可能被拦截的steam++，<del>名字好听</del>，不用天天更新，界面清爽，操作简便🙂。打开加速器，GitHub正确访问！！！</p>\n<h2 id=\"注册GitHub，安装git-2，创建版本库\"><a href=\"#注册GitHub，安装git-2，创建版本库\" class=\"headerlink\" title=\"注册GitHub，安装git 2，创建版本库\"></a>注册GitHub，安装git 2，创建版本库</h2><p>在打开加速器的情况下，一切都是那么水到渠成。</p>\n<h2 id=\"学习markdown文件的创建及书写\"><a href=\"#学习markdown文件的创建及书写\" class=\"headerlink\" title=\"学习markdown文件的创建及书写\"></a>学习markdown文件的创建及书写</h2><p>在git教程里有这样一句话：“建议你下载Visual Studio Code代替记事本。”哇哦~原来，我的下载VS时顺手下载的VScode是这么用的。原谅我迫不及待的开始学习VScode markdown的用法，同时也试验git管理。</p>\n<p>这第一篇学习记录，也就是我的VScode markdown试验结果。</p>\n<h2 id=\"使用git管理markdown文件\"><a href=\"#使用git管理markdown文件\" class=\"headerlink\" title=\"使用git管理markdown文件\"></a>使用git管理markdown文件</h2><p>在反复试探怎么使用GitHub搭建图床的过程中，我终于意识到，我的repositories并没有配置成功。在执行’git remote add origin’后，git无报错。下一步，git push却会反复报错：error:src refspec main dode not match any<br>error:failed to push some refs to github.com:Cynthia1379&#x2F;jotang.git</p>\n<h3 id=\"1、检验操作步骤问题\"><a href=\"#1、检验操作步骤问题\" class=\"headerlink\" title=\"1、检验操作步骤问题\"></a>1、检验操作步骤问题</h3><p>我学习删去了原来的“焦糖招新”repository，和本地隐藏的git文件，严格按照教程，重新操作。虽然与教程上GitHub的操作界面有些不同，但也确认了大的步骤没有问题，问题出现在一些细节上。</p>\n<h3 id=\"2、解决“fail-to-push”报错\"><a href=\"#2、解决“fail-to-push”报错\" class=\"headerlink\" title=\"2、解决“fail to push”报错\"></a>2、解决“fail to push”报错</h3><p>在CSDN论坛中，找到了相同报错的解决方案，输入“git pull origin master”进行同步。然后，又出现了新的报错。秉承着刨根问底的精神，继续搜索新的报错：“Could not read from remote repository””please make sure you have the correct access rights and the repository exists”</p>\n<p>得到的解答如下：原因一，git仓库的用户信息和本地的用户信息不匹配；原因二，客户端与服务端未生成 ssh key；原因三，客户端与服务端的ssh key不匹配；原因四，本地的hosts文件中没有配置IP地址和主机名的映射关系导致本地DNS无法解析出现该问题。</p>\n<p> 原因一，将仓库用户名改为本地用户名。改后再次尝试，失败。</p>\n<p> 原因二三，讲道理，我觉得不应该是这两个原因，然而由于提供的解决步骤（重新生成ssh密匙）中，加入了新的步骤，将SSH key添加到ssh-agent，我还是浅浅的试了一下，用’ssh -T <a href=\"mailto:&#x67;&#x69;&#116;&#x40;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;\">&#x67;&#x69;&#116;&#x40;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;</a>‘检验，弹出语句与成功界面不符。</p>\n<p> 原因四，发帖人对此方法的描述模糊不清。反复搜索后，未果。</p>\n<h3 id=\"3、解决”Please-make-sure-you-have-the-correct-access-rights”\"><a href=\"#3、解决”Please-make-sure-you-have-the-correct-access-rights”\" class=\"headerlink\" title=\"3、解决”Please make sure you have the correct access rights”\"></a>3、解决”Please make sure you have the correct access rights”</h3><p>在删除了.ssh文件下known_hosts后，再重新连接SSH密匙。别人输入“ssh -T <a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#46;&#x63;&#111;&#x6d;\">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#46;&#x63;&#111;&#x6d;</a>”后输入yes回车，问题解决。我完成操作后git错乱，跳出一长串y，光标不停左右横条。🙂，小问题。</p>\n<h3 id=\"4、观察，陷入僵局\"><a href=\"#4、观察，陷入僵局\" class=\"headerlink\" title=\"4、观察，陷入僵局\"></a>4、观察，陷入僵局</h3><p>当我和git的博弈陷入僵局之后，我又再次重复了一遍我能找到的解决步骤。发现了一些隐藏的问题：诸如由于多次重复操作，git连接的repository还是之前被删了的那一个。</p>\n<h3 id=\"5、写markdown整理思路，找到盲点\"><a href=\"#5、写markdown整理思路，找到盲点\" class=\"headerlink\" title=\"5、写markdown整理思路，找到盲点\"></a>5、写markdown整理思路，找到盲点</h3><p>在卡住之后，想到可以先把问题记录下来，写markdown梳理思路。以下是发现的问题：</p>\n<p>1、在查找资料时，思维太散。为解决问题一，往往只打开一个网页，发现问题2就立刻往下思考，对问题1反而没有进行深挖；</p>\n<p>2、在查找资料时，没有逻辑。直接忘记或者忽略了最开始还有另外一个报错。’’error:failed to push some refs to github.com:Cynthia1379&#x2F;jotang.git’’</p>\n<p>3、没有及时整理，在写markdown时狼狈的翻找浏览器历史记录来梳理思路，浪费了大量时间。</p>\n<p>4、（补充）在查找解决方法时，只按部就班解决问题，没有了解每个语句的含义和本质。</p>\n<p>解决方案：最简单的，做任务先建markdown，先梳理记录，再往后执行操作。</p>\n<h3 id=\"6、解决最初的另一个报错\"><a href=\"#6、解决最初的另一个报错\" class=\"headerlink\" title=\"6、解决最初的另一个报错\"></a>6、解决最初的另一个报错</h3><p>1、发现有可能是因为本地仓库分支和GitHub仓库分支名称不同。给本地git仓库更改分支名称后，仍然不行。</p>\n<p>2、可能因为git本地仓库是空仓库，再次提交文件确认仓库非空后，还是不可以。报错相同。</p>\n<p>3.仍然可能是分支问题：没有发现main分支，需要先切换到main分支。先commit，再branch，然后checkout，最后，git push 的时候报错变了😀，变成了“Could not read from remote repository”“please make sure you have the correct access rights and the repository exists”🙂</p>\n<h3 id=\"7、回到问题3-又一次找到核心问题\"><a href=\"#7、回到问题3-又一次找到核心问题\" class=\"headerlink\" title=\"7、回到问题3\\又一次找到核心问题\"></a>7、回到问题3\\又一次找到核心问题</h3><p>重新仔细阅读了一些解决方法之后，我get到了ssh -T <a href=\"mailto:&#103;&#x69;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;\">&#103;&#x69;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;</a>语句的含义——配置ssh，在此基础上，我又一次找到了问题的核心：kex_exchange_identification: Connection closed by remote host. Connection closed by……</p>\n<h3 id=\"8、搜索核心问题，推进解法\"><a href=\"#8、搜索核心问题，推进解法\" class=\"headerlink\" title=\"8、搜索核心问题，推进解法\"></a>8、搜索核心问题，推进解法</h3><p>1、在查找”kex-exchange……“语句时，我从CSDN跳转至StackOverflow找到了解法，采用sshd -t debug，然后出现新的语句sshd:no hostkeys available – exiting</p>\n<p>2、解决ssh启动错误：根据网上的解决方法，先输入ssh-keygen -A，再输入&#x2F;etc&#x2F;init.d&#x2F;ssh start，中间发现问题，找不到对应文件，然后再根据指令一下达后的反馈文字，找到本电脑中的文件地址”&#x2F;etc&#x2F;ssh“，成功完成指令，再运行”ssh -t”似乎也不再出现问题。然而，在尝试git push -u……时，还是不可以🙂</p>\n<p>3、回到上一级问题kex-exchange……，按网上方法用ssh -v <username>@<password>来debug，然后，出现了问题bash:syntax error near unexpected token ‘newline’，再次搜索，发现不能使用尖括号输入ssh -v 语句，去掉尖括号后重试，得到debuge1：reading configuration data &#x2F;etc&#x2F;ssh&#x2F;ssh_config  Could not resolve hostname password</p>\n<p>4.继续查找问题。发现此时网络中的解决方案要么是已经尝试过的，要么语义不明，指代不清，要么货不对板，没有参考价值。</p>\n<h3 id=\"9、暂时放弃😭\"><a href=\"#9、暂时放弃😭\" class=\"headerlink\" title=\"9、暂时放弃😭\"></a>9、暂时放弃😭</h3><p>至此，我选择暂时放弃GitHub，尝试使用gitee，毕竟，PS和XD的试用期不等人，马拉松的期限也不等人😭</p>\n<h3 id=\"10、再次尝试\"><a href=\"#10、再次尝试\" class=\"headerlink\" title=\"10、再次尝试\"></a>10、再次尝试</h3><p>作为一个ddl人，在10月13日听说我的舍友们把GitHub都配置成功了，我，emm。。。ddl人绝不认输！</p>\n<p>1.再次搜索教程，卸载后重新下载git；</p>\n<p>2.进入GitHub，重新配置ssh keys；</p>\n<p>3.新建远程与本地仓库；</p>\n<p>4.向本地仓库提交文件；</p>\n<p>5.卡在了提交这一步，报错内容大意为无法连接到远程仓库。<br>无法连接的原因：无法读取远程仓库，连接被端口关闭。。。</p>\n<p>6.我又又又找到了新的可能的失败原因：端口占用问题。打开cmd，查询端口，找到占用软件，尝试停用。🙂，占用22号端口的软件是steam++呢，尝试关闭端口也无法关闭，直接关闭steam++，端口无占用软件，但是GitHub都无法打开🙂。<br>我浅问了我的室友采用的解决方案：一个是直接VPN翻墙，一个是连接手机热点就能流畅登录github。</p>\n<p>7.我谢谢你，GitHub🙂</p>\n","excerpt":"<p>大一刚入学，在学校焦糖工作室招新马拉松中，写下的第一篇markdown学习笔记。由于系统设置问题，并未成功完成git与GitHub建立远程链接，但是，从中积累通过markdown写作，并复盘操作，在诸多bug中找到解决路径的经验。</p>","more":"<h2 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h2><p>安装git是我遇见的第一个槛，打得开官网却打不开下载页面。我尝试以下方法解决：</p>\n<h3 id=\"1、换个浏览器\"><a href=\"#1、换个浏览器\" class=\"headerlink\" title=\"1、换个浏览器\"></a>1、换个浏览器</h3><p>虽然现在想起来这个办法有点傻，但也不失为一种思路，而且在科普题目一中，就提到了不同的搜索引擎。所以，我舍弃了Microsoft Edge，短暂投入chorme怀抱。可事实告诉我，浏览器不是原罪。</p>\n<h3 id=\"2、翻墙\"><a href=\"#2、翻墙\" class=\"headerlink\" title=\"2、翻墙\"></a>2、翻墙</h3><p>翻墙是我的室友从9月6日一早就在做，做了一大半天的事儿。所以，我不用搜索，我就知道，翻墙能解决问题。However,翻墙教程千千万，翻墙路径真麻烦，更何况，翻墙违法。Then，<del>怕网警</del>（怕麻烦且贫穷）的我，收回了翻墙的心。（但是如果后续还要使用像GitHub这样的外网，翻墙可能才是最简单的通法吧）</p>\n<h3 id=\"3、发现核心问题：打开GitHub网站\"><a href=\"#3、发现核心问题：打开GitHub网站\" class=\"headerlink\" title=\"3、发现核心问题：打开GitHub网站\"></a>3、发现核心问题：打开GitHub网站</h3><p>直接搜索git下载，似乎没有多的解决方案了。However，观察我无法打开的下载页面，页面标签上赫然写着一个熟悉的名字——GitHub。所以，再次搜索打开GitHub，解决方法多了起来。</p>\n<h2 id=\"快速打开GitHub\"><a href=\"#快速打开GitHub\" class=\"headerlink\" title=\"快速打开GitHub\"></a>快速打开GitHub</h2><p>网上的途径千千万，真正能用的才是好方法。原来不是我打不开这个网站，只是他的响应速度太慢了。</p>\n<h3 id=\"1、修改host\"><a href=\"#1、修改host\" class=\"headerlink\" title=\"1、修改host\"></a>1、修改host</h3><p>这是知乎上找到的方法，大概途径是，先用IP地址查找网页，查找GitHub网站的IP地址，然后在Windows&gt;System32&gt;drivers&gt;etc&gt;hosts中把查到的IP地址用一定格式搞上去，然后再通过cmd刷新DNS解决问题。</p>\n<p>想法很不错，可我没有更改C盘此文件的权限。这时，我想起假期看C语言网课时，老师提到的软件——notepad++。当时使用是为了有权限修改VS的源文件，使scanf函数不报错。（我懒，所以当时采用了弹幕的方法，先另存为到桌面，保存后再重新将文件拖回原位置替换）</p>\n<p>先用另存为法更改hosts文件，好家伙，用记事本方式打开，另存为后也变成了txt文件。</p>\n<p>再下notepad++，官网也是外网，打不开。于是在CSDN上找到了大佬分享的网盘文件，快乐下载。</p>\n<p>当我志得意满的完成了此方法的所有步骤后，GitHub还是打不开。🙂真好。。。</p>\n<h3 id=\"2、加速器\"><a href=\"#2、加速器\" class=\"headerlink\" title=\"2、加速器\"></a>2、加速器</h3><p>知乎靠不住，B站大学应该能顶了吧？</p>\n<h4 id=\"dev-sidecar\"><a href=\"#dev-sidecar\" class=\"headerlink\" title=\"dev-sidecar\"></a>dev-sidecar</h4><p>跟着标题党学教程，《如何快速打开GitHub网站？30秒教你快速解决》。确实，他用了30s解决问题，但是，我要先打开gitee网站，注册，搜索，下载加速器……ok,fine,当我一步一步照做之后，我发现我居然搞不懂他是怎么一下子就下载下来的？！</p>\n<p>在哪里跌倒就要在哪里躺下，我选择换一个教程。</p>\n<h4 id=\"steam\"><a href=\"#steam\" class=\"headerlink\" title=\"steam++\"></a>steam++</h4><p>换一个加速器，就好多了。在UP推荐的两个兼职加速器UU加速器和steam++里，我果断选择了可能被拦截的steam++，<del>名字好听</del>，不用天天更新，界面清爽，操作简便🙂。打开加速器，GitHub正确访问！！！</p>\n<h2 id=\"注册GitHub，安装git-2，创建版本库\"><a href=\"#注册GitHub，安装git-2，创建版本库\" class=\"headerlink\" title=\"注册GitHub，安装git 2，创建版本库\"></a>注册GitHub，安装git 2，创建版本库</h2><p>在打开加速器的情况下，一切都是那么水到渠成。</p>\n<h2 id=\"学习markdown文件的创建及书写\"><a href=\"#学习markdown文件的创建及书写\" class=\"headerlink\" title=\"学习markdown文件的创建及书写\"></a>学习markdown文件的创建及书写</h2><p>在git教程里有这样一句话：“建议你下载Visual Studio Code代替记事本。”哇哦~原来，我的下载VS时顺手下载的VScode是这么用的。原谅我迫不及待的开始学习VScode markdown的用法，同时也试验git管理。</p>\n<p>这第一篇学习记录，也就是我的VScode markdown试验结果。</p>\n<h2 id=\"使用git管理markdown文件\"><a href=\"#使用git管理markdown文件\" class=\"headerlink\" title=\"使用git管理markdown文件\"></a>使用git管理markdown文件</h2><p>在反复试探怎么使用GitHub搭建图床的过程中，我终于意识到，我的repositories并没有配置成功。在执行’git remote add origin’后，git无报错。下一步，git push却会反复报错：error:src refspec main dode not match any<br>error:failed to push some refs to github.com:Cynthia1379&#x2F;jotang.git</p>\n<h3 id=\"1、检验操作步骤问题\"><a href=\"#1、检验操作步骤问题\" class=\"headerlink\" title=\"1、检验操作步骤问题\"></a>1、检验操作步骤问题</h3><p>我学习删去了原来的“焦糖招新”repository，和本地隐藏的git文件，严格按照教程，重新操作。虽然与教程上GitHub的操作界面有些不同，但也确认了大的步骤没有问题，问题出现在一些细节上。</p>\n<h3 id=\"2、解决“fail-to-push”报错\"><a href=\"#2、解决“fail-to-push”报错\" class=\"headerlink\" title=\"2、解决“fail to push”报错\"></a>2、解决“fail to push”报错</h3><p>在CSDN论坛中，找到了相同报错的解决方案，输入“git pull origin master”进行同步。然后，又出现了新的报错。秉承着刨根问底的精神，继续搜索新的报错：“Could not read from remote repository””please make sure you have the correct access rights and the repository exists”</p>\n<p>得到的解答如下：原因一，git仓库的用户信息和本地的用户信息不匹配；原因二，客户端与服务端未生成 ssh key；原因三，客户端与服务端的ssh key不匹配；原因四，本地的hosts文件中没有配置IP地址和主机名的映射关系导致本地DNS无法解析出现该问题。</p>\n<p> 原因一，将仓库用户名改为本地用户名。改后再次尝试，失败。</p>\n<p> 原因二三，讲道理，我觉得不应该是这两个原因，然而由于提供的解决步骤（重新生成ssh密匙）中，加入了新的步骤，将SSH key添加到ssh-agent，我还是浅浅的试了一下，用’ssh -T <a href=\"mailto:&#x67;&#x69;&#116;&#x40;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;\">&#x67;&#x69;&#116;&#x40;&#103;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;</a>‘检验，弹出语句与成功界面不符。</p>\n<p> 原因四，发帖人对此方法的描述模糊不清。反复搜索后，未果。</p>\n<h3 id=\"3、解决”Please-make-sure-you-have-the-correct-access-rights”\"><a href=\"#3、解决”Please-make-sure-you-have-the-correct-access-rights”\" class=\"headerlink\" title=\"3、解决”Please make sure you have the correct access rights”\"></a>3、解决”Please make sure you have the correct access rights”</h3><p>在删除了.ssh文件下known_hosts后，再重新连接SSH密匙。别人输入“ssh -T <a href=\"mailto:&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#46;&#x63;&#111;&#x6d;\">&#x67;&#x69;&#x74;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#46;&#x63;&#111;&#x6d;</a>”后输入yes回车，问题解决。我完成操作后git错乱，跳出一长串y，光标不停左右横条。🙂，小问题。</p>\n<h3 id=\"4、观察，陷入僵局\"><a href=\"#4、观察，陷入僵局\" class=\"headerlink\" title=\"4、观察，陷入僵局\"></a>4、观察，陷入僵局</h3><p>当我和git的博弈陷入僵局之后，我又再次重复了一遍我能找到的解决步骤。发现了一些隐藏的问题：诸如由于多次重复操作，git连接的repository还是之前被删了的那一个。</p>\n<h3 id=\"5、写markdown整理思路，找到盲点\"><a href=\"#5、写markdown整理思路，找到盲点\" class=\"headerlink\" title=\"5、写markdown整理思路，找到盲点\"></a>5、写markdown整理思路，找到盲点</h3><p>在卡住之后，想到可以先把问题记录下来，写markdown梳理思路。以下是发现的问题：</p>\n<p>1、在查找资料时，思维太散。为解决问题一，往往只打开一个网页，发现问题2就立刻往下思考，对问题1反而没有进行深挖；</p>\n<p>2、在查找资料时，没有逻辑。直接忘记或者忽略了最开始还有另外一个报错。’’error:failed to push some refs to github.com:Cynthia1379&#x2F;jotang.git’’</p>\n<p>3、没有及时整理，在写markdown时狼狈的翻找浏览器历史记录来梳理思路，浪费了大量时间。</p>\n<p>4、（补充）在查找解决方法时，只按部就班解决问题，没有了解每个语句的含义和本质。</p>\n<p>解决方案：最简单的，做任务先建markdown，先梳理记录，再往后执行操作。</p>\n<h3 id=\"6、解决最初的另一个报错\"><a href=\"#6、解决最初的另一个报错\" class=\"headerlink\" title=\"6、解决最初的另一个报错\"></a>6、解决最初的另一个报错</h3><p>1、发现有可能是因为本地仓库分支和GitHub仓库分支名称不同。给本地git仓库更改分支名称后，仍然不行。</p>\n<p>2、可能因为git本地仓库是空仓库，再次提交文件确认仓库非空后，还是不可以。报错相同。</p>\n<p>3.仍然可能是分支问题：没有发现main分支，需要先切换到main分支。先commit，再branch，然后checkout，最后，git push 的时候报错变了😀，变成了“Could not read from remote repository”“please make sure you have the correct access rights and the repository exists”🙂</p>\n<h3 id=\"7、回到问题3-又一次找到核心问题\"><a href=\"#7、回到问题3-又一次找到核心问题\" class=\"headerlink\" title=\"7、回到问题3\\又一次找到核心问题\"></a>7、回到问题3\\又一次找到核心问题</h3><p>重新仔细阅读了一些解决方法之后，我get到了ssh -T <a href=\"mailto:&#103;&#x69;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;\">&#103;&#x69;&#116;&#x40;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#111;&#x6d;</a>语句的含义——配置ssh，在此基础上，我又一次找到了问题的核心：kex_exchange_identification: Connection closed by remote host. Connection closed by……</p>\n<h3 id=\"8、搜索核心问题，推进解法\"><a href=\"#8、搜索核心问题，推进解法\" class=\"headerlink\" title=\"8、搜索核心问题，推进解法\"></a>8、搜索核心问题，推进解法</h3><p>1、在查找”kex-exchange……“语句时，我从CSDN跳转至StackOverflow找到了解法，采用sshd -t debug，然后出现新的语句sshd:no hostkeys available – exiting</p>\n<p>2、解决ssh启动错误：根据网上的解决方法，先输入ssh-keygen -A，再输入&#x2F;etc&#x2F;init.d&#x2F;ssh start，中间发现问题，找不到对应文件，然后再根据指令一下达后的反馈文字，找到本电脑中的文件地址”&#x2F;etc&#x2F;ssh“，成功完成指令，再运行”ssh -t”似乎也不再出现问题。然而，在尝试git push -u……时，还是不可以🙂</p>\n<p>3、回到上一级问题kex-exchange……，按网上方法用ssh -v <username>@<password>来debug，然后，出现了问题bash:syntax error near unexpected token ‘newline’，再次搜索，发现不能使用尖括号输入ssh -v 语句，去掉尖括号后重试，得到debuge1：reading configuration data &#x2F;etc&#x2F;ssh&#x2F;ssh_config  Could not resolve hostname password</p>\n<p>4.继续查找问题。发现此时网络中的解决方案要么是已经尝试过的，要么语义不明，指代不清，要么货不对板，没有参考价值。</p>\n<h3 id=\"9、暂时放弃😭\"><a href=\"#9、暂时放弃😭\" class=\"headerlink\" title=\"9、暂时放弃😭\"></a>9、暂时放弃😭</h3><p>至此，我选择暂时放弃GitHub，尝试使用gitee，毕竟，PS和XD的试用期不等人，马拉松的期限也不等人😭</p>\n<h3 id=\"10、再次尝试\"><a href=\"#10、再次尝试\" class=\"headerlink\" title=\"10、再次尝试\"></a>10、再次尝试</h3><p>作为一个ddl人，在10月13日听说我的舍友们把GitHub都配置成功了，我，emm。。。ddl人绝不认输！</p>\n<p>1.再次搜索教程，卸载后重新下载git；</p>\n<p>2.进入GitHub，重新配置ssh keys；</p>\n<p>3.新建远程与本地仓库；</p>\n<p>4.向本地仓库提交文件；</p>\n<p>5.卡在了提交这一步，报错内容大意为无法连接到远程仓库。<br>无法连接的原因：无法读取远程仓库，连接被端口关闭。。。</p>\n<p>6.我又又又找到了新的可能的失败原因：端口占用问题。打开cmd，查询端口，找到占用软件，尝试停用。🙂，占用22号端口的软件是steam++呢，尝试关闭端口也无法关闭，直接关闭steam++，端口无占用软件，但是GitHub都无法打开🙂。<br>我浅问了我的室友采用的解决方案：一个是直接VPN翻墙，一个是连接手机热点就能流畅登录github。</p>\n<p>7.我谢谢你，GitHub🙂</p>"}],"PostAsset":[{"_id":"source/_posts/UI学习记录/1.jpg","post":"cm2ubvqnr0001f8v8by5gbdzw","slug":"1.jpg","modified":1,"renderable":0},{"_id":"source/_posts/UI学习记录/2.png","post":"cm2ubvqnr0001f8v8by5gbdzw","slug":"2.png","modified":1,"renderable":0},{"_id":"source/_posts/UI学习记录/3.jpg","post":"cm2ubvqnr0001f8v8by5gbdzw","slug":"3.jpg","modified":1,"renderable":0},{"_id":"source/_posts/UI学习记录/4.png","post":"cm2ubvqnr0001f8v8by5gbdzw","slug":"4.png","modified":1,"renderable":0},{"_id":"source/_posts/UI学习记录/5.png","post":"cm2ubvqnr0001f8v8by5gbdzw","slug":"5.png","modified":1,"renderable":0},{"_id":"source/_posts/UI学习记录/图标11.png","post":"cm2ubvqnr0001f8v8by5gbdzw","slug":"图标11.png","modified":1,"renderable":0}],"PostCategory":[{"post_id":"cm2ubvqny0008f8v8g9cubj08","category_id":"cm2ubvqnv0004f8v8adr65gfi","_id":"cm2ubvqo0000df8v83llb1e24"},{"post_id":"cm2ubvqnr0001f8v8by5gbdzw","category_id":"cm2ubvqnv0004f8v8adr65gfi","_id":"cm2ubvqo0000ef8v8d5hf1jv9"},{"post_id":"cm2ubvqny0009f8v8afle98eq","category_id":"cm2ubvqnv0004f8v8adr65gfi","_id":"cm2ubvqo0000hf8v85ztk9l1e"},{"post_id":"cm2ubvqnz000cf8v89tzn8ubx","category_id":"cm2ubvqnv0004f8v8adr65gfi","_id":"cm2ubvqo1000if8v8djor81ug"}],"PostTag":[{"post_id":"cm2ubvqnr0001f8v8by5gbdzw","tag_id":"cm2ubvqnw0005f8v8gkuw3ui3","_id":"cm2ubvqnz000bf8v84rsufo5w"},{"post_id":"cm2ubvqny0008f8v8g9cubj08","tag_id":"cm2ubvqnz000af8v83hil3wm3","_id":"cm2ubvqo0000gf8v8bnqt4stt"},{"post_id":"cm2ubvqny0009f8v8afle98eq","tag_id":"cm2ubvqo0000ff8v80pobgyta","_id":"cm2ubvqo1000kf8v89vexduxx"},{"post_id":"cm2ubvqnz000cf8v89tzn8ubx","tag_id":"cm2ubvqo1000jf8v80p010h7l","_id":"cm2ubvqo1000lf8v8g1ppa0yd"}],"Tag":[{"name":"UI设计","_id":"cm2ubvqnw0005f8v8gkuw3ui3"},{"name":"leetcode","_id":"cm2ubvqnz000af8v83hil3wm3"},{"name":"虚拟机","_id":"cm2ubvqo0000ff8v80pobgyta"},{"name":"Git","_id":"cm2ubvqo1000jf8v80p010h7l"}]}}